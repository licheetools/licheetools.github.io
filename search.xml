<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>零基础使用Django2.0.1打造在线教育网站（四）：简易留言簿基础开发</title>
      <link href="/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E7%AE%80%E6%98%93%E7%95%99%E8%A8%80%E7%B0%BF%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/"/>
      <url>/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E7%AE%80%E6%98%93%E7%95%99%E8%A8%80%E7%B0%BF%E5%9F%BA%E7%A1%80%E5%BC%80%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本篇笔记主要是简易留言簿的基础开发，接下来的一篇才是开发的重点，但是这样为了缓冲一下大家，希望大家不要有大大的鸭梨。。。笔记中上篇（第三篇）对应上传的仓库为:<a href="https://github.com/licheetools/djangoTest对应第三篇截止代码。我们从这开始正式进入到简易留言簿的基础开发。（前面的必要工作已经做完，如果没跟上节奏，请回头补上，这里就不细说了。）" target="_blank" rel="noopener">https://github.com/licheetools/djangoTest对应第三篇截止代码。我们从这开始正式进入到简易留言簿的基础开发。（前面的必要工作已经做完，如果没跟上节奏，请回头补上，这里就不细说了。）</a></p><h3 id="页面介绍"><a href="#页面介绍" class="headerlink" title="页面介绍"></a>页面介绍</h3><p><img src="https://upload-images.jianshu.io/upload_images/8964398-25d5b8c405504cac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>这个页面就是我们即将开发的简易留言簿，初始页面就是这样，关于这个页面的实现是html和css搭建的，这是前端的部分，有兴趣的小伙伴自己去查找资料学习一下，这里因为只讲后端，就不介绍了哈。</p><p>这里主要是介绍Django从请求到响应的整个完整流程，为我们后面开发在线教育平台打下基础。本篇笔记所要用到的静态html页面请前往Github下载：<strong>start.html</strong></p><h3 id="业务逻辑介绍"><a href="#业务逻辑介绍" class="headerlink" title="业务逻辑介绍"></a>业务逻辑介绍</h3><p>用户填写信息和留言 –&gt; 点击提交 –&gt;数据被存储到数据库（我们可以去数据库查询的到）。</p><h3 id="开始分析"><a href="#开始分析" class="headerlink" title="开始分析"></a>开始分析</h3><p>1、将下载的<strong>start.html</strong>文件拖到前面创建的templates文件夹里，如下图：<img src="https://upload-images.jianshu.io/upload_images/8964398-e35d79330ec06dca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>2、通过观察我们发现，这个页面里面把所需的css样式都写进去了，不利于我们对其样式的个性化管理，所以我打算新建一个css文件，用于存放css样式表单。</p><p>在static的下面新创建css和js文件夹，可能js文件夹用不上，但是这也是为后面的开发在线教育平台打下基础，你最好也试着创建一下，一般这些文件都是经常用到的。（这里因为功能的原因用不上。）然后在css这个文件夹下面新建一个<strong>style.css</strong>的文件。<img src="https://upload-images.jianshu.io/upload_images/8964398-67c6eddd1dc25f49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>3、打开<strong>start.html</strong>，点击<style>标签，将样式收起来，然后将其复制到刚才新建的<strong>style.css</strong>这个样式表中。<img src="https://upload-images.jianshu.io/upload_images/8964398-0c398228cdfd192e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>记得在复制的时候把开头和结尾的<style>标签给去掉，并且可以按键盘上的<code>shift + tab</code>键，格式一下代码。就是下面的样子！<img src="https://upload-images.jianshu.io/upload_images/8964398-34033ea199acbfa9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>4、别忘了将你新建的css样式文件引入到我们的html文件里去，否则后面文件的样式可能就加载不出来呀。事实上，我们在html里面已经引入了。<img src="https://upload-images.jianshu.io/upload_images/8964398-e2a9eb007acc04f3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="数据库的连接"><a href="#数据库的连接" class="headerlink" title="数据库的连接"></a>数据库的连接</h3><p>5、打开djangoTest这个项目目录下面的settings.py文件，找到下面第80行代码，因为Django自带的数据库是sqlite3，前面说过我们采用的数MySQL数据库，所以需要对其进行修改。<img src="https://upload-images.jianshu.io/upload_images/8964398-136d6211aa93d9e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>也就是说默认的连接是这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.sqlite3&apos;,</span><br><span class="line">        &apos;NAME&apos;: os.path.join(BASE_DIR, &apos;db.sqlite3&apos;),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但我们应当修改成这个样子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;djangoTest&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;密码&apos;,</span><br><span class="line">        &apos;HOST&apos;: &quot;127.0.0.1&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们中在Navicat中新建的数据库名字与其中的NAME的名称应设置为一致，否则会出错！！<br>6、在Navicat中新建的数据库djangoTest，如图：<img src="https://upload-images.jianshu.io/upload_images/8964398-9e90d1ca46854b9c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="安装-mysqlclient和配置seeting文件。"><a href="#安装-mysqlclient和配置seeting文件。" class="headerlink" title="安装 mysqlclient和配置seeting文件。"></a>安装 mysqlclient和配置seeting文件。</h3><p>7、点击主页面Tools 菜单下的 Run manage.py Task，我们会发现系统报了下面的错误：<img src="https://upload-images.jianshu.io/upload_images/8964398-fa13bdd18c9fb7d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>上面的错误提示我们没有安装MySQLdb模块，既然出了问题，我们就解决问题。</p><p>还记的在Pycharm里面安装第三方库么？如果不记得请翻看前面的笔记。这里简单说明一下：<img src="https://upload-images.jianshu.io/upload_images/8964398-98ddd19b78cb5f65.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>点击4中的绿色+号，就可以搜索第三方库，然后点击install即可，是不是很简单，但有时候会出现安装失败的情况，所以最好的方法是去其官方网站下载包，然后在本地安装即可。这里开启传送大门，<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python，点击这个网站，然后按住`Ctrl+F`键，调出搜索框，在里面输入mysqlclient，然后回车即可，因为我的电脑是64位，所以下载64位的。![](https://upload-images.jianshu.io/upload_images/8964398-20977829a37ddad4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python，点击这个网站，然后按住`Ctrl+F`键，调出搜索框，在里面输入mysqlclient，然后回车即可，因为我的电脑是64位，所以下载64位的。![](https://upload-images.jianshu.io/upload_images/8964398-20977829a37ddad4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</a><br>上面的cp36代表Python3.6的版本，cp37代表Python3.7 的版本！</p><p>8、在虚拟环境中安装mysqlclient，如图所示：<img src="https://upload-images.jianshu.io/upload_images/8964398-4a81975aef14b950.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>注意安装的命令是：<code>pip install mysqlclient-1.3.13-cp36-cp36m-win_amd64.whl</code>（后面的是你刚才下载的版本名称，带whl）<br>9、接下来我们再次点击Tools 菜单下 Run manage.py Task，我们会发现刚才的错误不再出现了。<img src="https://upload-images.jianshu.io/upload_images/8964398-f5133e8116479a77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h3 id="makemigrations和migrate"><a href="#makemigrations和migrate" class="headerlink" title="makemigrations和migrate"></a>makemigrations和migrate</h3><p>10、现在介绍一下我们前面讲到用于数据迁移的两个命令：makemigrations和<br>migrate，下面我们分别运行这两个命令，看有什么大的变化。<br>在调用makemigrations这个命令之后，结果是这样的：<img src="https://upload-images.jianshu.io/upload_images/8964398-df631b352ce0acdc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>紧接着，在调用migrate这个命令之后，结果变成这样了：<img src="https://upload-images.jianshu.io/upload_images/8964398-ebbd650db7dab9e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>我们会发现它生成了好多文件，我们打开Navicat中新建的数据库djangoTest，发现了很多表：<img src="https://upload-images.jianshu.io/upload_images/8964398-dfd4f9fd993bb96b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>这些都是Django系统默认的内置数据表，我们在后面会用到它们。<br>11、运行一下我们的项目：runserver，然后到<a href="http://127.0.0.1:8000/来访问看是否运行成功。如果成功，则页面显示It">http://127.0.0.1:8000/来访问看是否运行成功。如果成功，则页面显示It</a> worked。<img src="https://upload-images.jianshu.io/upload_images/8964398-ee31d60957b16974.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>最后结果如下：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-d9ca43e104459032.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><p>你可能会问，为什么显示的不是留言这个页面，而是原始页面呢？那是因为我们还没有配置app的信息，下面开始配置。</p><h3 id="展示留言页面"><a href="#展示留言页面" class="headerlink" title="展示留言页面"></a>展示留言页面</h3><p>12、将djangoTest/urls.py修改如下:<br><img src="https://upload-images.jianshu.io/upload_images/8964398-f86e1867a6503c87.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(&apos;admin/&apos;, admin.site.urls),</span><br><span class="line">    path(&apos;start/&apos;, getstart),  # 新增加的一行</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>这里新增加path(‘start/‘, getstart),是代表以start为开头的地址。getstart 是这个url相对应连接（映射）的view。我们先去创建一个视图函数，其名字就是getstart。<br>13、在apps/liuyan/views.py添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">def getstart(request):</span><br><span class="line">    return render(request, &apos;start.html&apos;)</span><br></pre></td></tr></table></figure></p><p>request 这个参数是django的一个httpRequest对象，关于它的用法你可以按住ctrl + 左键 跟踪到我们的render函数里面。Alt + 左箭头返回原位。<img src="https://upload-images.jianshu.io/upload_images/8964398-98553b0413831e1c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>一般来说，render函数，我常用的就是它的2个参数：request和template-name。上图中<strong>start.html</strong>就是我们的原始页面名称。<br>14、回过头，对我们之前的urls.py进行重新配置完善：<img src="https://upload-images.jianshu.io/upload_images/8964398-00e5242fb612f2b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>也就是12步中的urls.py，增加一行包的引入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from liuyan.views import getstart</span><br></pre></td></tr></table></figure></p><p>变成了这个样子：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-20dcb23398995a1b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>15、重新启动运行一下我们的项目：runserver，发现报错了：<img src="https://upload-images.jianshu.io/upload_images/8964398-d81f7ca934da278c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>其实并没有报错，只是因为我们在path中加入了自己的配置’start/‘,它就不会采用默认配置了，所以我们的IP地址应该是：<a href="http://127.0.0.1:8000/start/。你点进去看看：">http://127.0.0.1:8000/start/。你点进去看看：</a><br><img src="https://upload-images.jianshu.io/upload_images/8964398-d486786dcd9cbc95.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>现在页面出来了但是样式却没有加载成功，也就是说static/css/style.css文件没有找到。那是因为setting.py中静态文件的配置出了问题，第124行代码需要修改。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-c2458a00c08634fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>它只说明了目录的名称，并没有指明查找的根路径，所以需要添加下面代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">STATIC_URL = &apos;/static/&apos;</span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    os.path.join(BASE_DIR, &apos;static&apos;)</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p>16、我们再次运行一下:runserver。如果你前面没有按ctrl+v停止，那你只需要ctrl+s 即可重新刷新运行。最后运行结果如下：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-aeee768b6356cf57.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>成功了，这就是今天最基本的页面信息配置了，把页面动态加载出来了。下一篇笔记将给这个动态的留言板加交互特效了。</p><p>不过很多小伙伴说，自己看的是云里雾里，对这个过程不熟悉，自己没有接触过MVC、MVVC等网页设计模式，所以我总结一下这个项目的配置流程。</p><h2 id="项目配置流程图"><a href="#项目配置流程图" class="headerlink" title="项目配置流程图"></a>项目配置流程图</h2><h3 id="刚才的流程顺序"><a href="#刚才的流程顺序" class="headerlink" title="刚才的流程顺序"></a>刚才的流程顺序</h3><p>1、把html文件导入进来；<br>2、通过简单的url配置来访问这个html；<br>3、发现找不到页面，所以我们就设置setting中DIRS路径；<br>4、页面可以正常显示，但css样式不能正常加载，我们设置了STATICFILES_DIRS；<br>。。。这样一步的，我们发现经常遇到错误，其实我们是从倒的顺序来执行的，目的就是让大家能通过很多的错误来加深自己对Django开发流程的熟悉程度。</p><h3 id="正常的开发流程"><a href="#正常的开发流程" class="headerlink" title="正常的开发流程"></a>正常的开发流程</h3><p><img src="https://upload-images.jianshu.io/upload_images/8964398-6dce157937216119.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br>看到没有，这样做的好处就是避免少犯错误。你可以尝试以顺的顺序来创建一个新的项目，试着体会一下这2种开发顺序的感觉。</p><p>后面我们的开发会从migration生成数据表这里开始往下编辑内容。本篇笔记中对应上传的仓库为:<a href="https://github.com/licheetools/djangoTest对应第四篇截止代码。">https://github.com/licheetools/djangoTest对应第四篇截止代码。</a></p><p>至此，简易静态留言簿的基础开发就到这里了，感谢你的赏阅。下一篇将实现留言簿的交互功能。</p></style></p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Django2.0.1打造在线教育网站（一）：项目介绍</title>
      <link href="/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/"/>
      <url>/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%A1%B9%E7%9B%AE%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>嘿，小伙伴们你们好，很高兴你能看到这套教程，这是我在学习慕课网时的一些笔记，希望对即将学习Django的你们，能提供一些帮助。在每篇文章的后面，我会把我在这部分出现的BUG以及解决方法附上，以供大家参考，大家有什么问题可以在评论下方留言。</p><h2 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h2><h3 id="Django介绍"><a href="#Django介绍" class="headerlink" title="Django介绍"></a>Django介绍</h3><p>Django是目前Python Web开发中的主流框架，因为它有许多功能强大的第三方插件，你可以很方便的开发出自己的工具包，这使得它具有很强的可扩展性，被许多大型公司使用，如Google，豆瓣，YouTube，知乎，instagram等。</p><h3 id="在线网站介绍"><a href="#在线网站介绍" class="headerlink" title="在线网站介绍"></a>在线网站介绍</h3><p>我们这个网站功能强大，具有完整的个人中心，用户登录，注册以及找回密码等功能。下面分别介绍各个部分的功能：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">点击个人中心: 你可以修改头像，密码，邮箱，可以看到我的课程以及我的收藏。还可以删除我的收藏，消息。</span><br><span class="line"></span><br><span class="line">点击导航栏: 你可以看到公开课，授课讲师，授课机构和全局搜索。</span><br><span class="line"></span><br><span class="line">点击公开课：你可以看到课程列表，排序-搜索。热门课程推荐和课程的分页。</span><br><span class="line"></span><br><span class="line">点击课程：你可以在课程详情页中对课程进行收藏和取消收藏。同时可以采用富文本对课程内容进行展示。</span><br><span class="line"></span><br><span class="line">点击开始学习：你可以看到课程的章节信息和评论信息以及课程资源的下载链接。</span><br><span class="line"></span><br><span class="line">点击授课讲师：你可以看到授课讲师的列表页，可以对讲师进行人气排序以及分页，右侧还有讲师排行榜。</span><br><span class="line"></span><br><span class="line">点击讲师的详情页面：你可以对讲师进行收藏和分享，以及看到该讲师的全部课程。</span><br><span class="line"></span><br><span class="line">点击导航栏: 你可以看到授课机构，它有分页，排序和筛选功能。</span><br><span class="line"></span><br><span class="line">机构列表页右侧有快速提交我要学习的表单，之后你便可以开始学习了。</span><br><span class="line"></span><br><span class="line">点击机构：它的左侧会呈现：机构首页,机构课程，机构介绍，机构讲师这四部分。</span><br><span class="line"></span><br><span class="line">后台管理系统可以切换主题。左侧每一个功能都有列表显示,具有增删改查，筛选功能。</span><br><span class="line"></span><br><span class="line">课程列表页可以对不同字段进行排序。你可以选择多条记录进行删除操作。</span><br><span class="line"></span><br><span class="line">课程列表页：点击过滤器，选择字段范围开始搜索,结果可以导出csv，xml，json等格式文本。</span><br><span class="line"></span><br><span class="line">你可以在课程新增页面上传图片，和进行富文本的编辑，时间选择，添加章节，添加课程资源等。</span><br><span class="line"></span><br><span class="line">日志记录：它可以记录后台人员的操作情况。</span><br><span class="line"></span><br><span class="line">其他的大家可以在后期的学习过程中慢慢体会，这里就不一一而足了。</span><br></pre></td></tr></table></figure></p><h3 id="学完过后"><a href="#学完过后" class="headerlink" title="学完过后"></a>学完过后</h3><p>你不仅对Django的基础知识有了一个比较深刻的印象，还对MTV，MVC模式有了一个更加全面的了解，举一反三，你可以利用它开发各种类型的网站，如电商购物,在线旅游，公司官网，个人博客等其他网站。具体可以点击查看这个<a href="https://www.djangosites.org/" target="_blank" rel="noopener">基于django的网站</a>（可能要翻墙的哈）。</p><h2 id="开发环境介绍"><a href="#开发环境介绍" class="headerlink" title="开发环境介绍"></a>开发环境介绍</h2><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h3><p>网站是在windows下通过pycharm和virtualenv搭建的开发环境下进行的开发.</p><h3 id="后台介绍"><a href="#后台介绍" class="headerlink" title="后台介绍"></a>后台介绍</h3><p>采用xadmin进行开发。之前用过django-suit，发现它只是单纯的对admin进行了美化，并没有更高级的功能。鉴于此，我们推荐使用xadmin进行后台管理。它有许多的拓展功能，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xadmin常用插件</span><br><span class="line">自定义xadmin插件</span><br><span class="line">xadmin的富文本编辑</span><br><span class="line">xadmin的excel导入功能。</span><br><span class="line">一些开源的django开发库。</span><br></pre></td></tr></table></figure></p><p>到此，项目的所有介绍结束，但为了你对后面的开发有一个提前的认识，这里传送一些资料。</p><h2 id="补充资料"><a href="#补充资料" class="headerlink" title="补充资料"></a>补充资料</h2><p>1、<strong>[入门]</strong> <a href="http://www.runoob.com/django/django-tutorial.html" target="_blank" rel="noopener">菜鸟Django 教程</a>，非常简短的教程，可以快速让你有一个清楚的认识。<br>2、<strong>[基础]</strong> <a href="https://code.ziqiangxuetang.com/django/django-tutorial.html" target="_blank" rel="noopener">自强学堂Django</a>，非常不错的教程，可以没事看一看。<br>3、<strong>[基础]</strong> <a href="http://www.liujiangblog.com/course/django/2" target="_blank" rel="noopener">刘江的Django教程</a>，非常适合入门的小白阅读，还有2个例子供你练习。<br>4、<strong>[入门]</strong> <a href="http://dwz.cn/VHRVxWfC" target="_blank" rel="noopener">1元学习《Django零基础到项目实战》</a>，非常不错的基础入门<strong>视频</strong>教程。<br>5、<strong>[基础]</strong><a href="http://edu.51cto.com/course/2787.html" target="_blank" rel="noopener">用Python Django快速做出高大上的BBS论坛网站</a>，这是免费的<strong>视频</strong>教程，大家可以试着去练手。</p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Django2.0.1打造在线教育网站（三）：Django基础知识回顾</title>
      <link href="/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9ADjango%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/"/>
      <url>/2018/04/10/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9ADjango%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>在前面的第二篇里，我们创建了一个名为djangoTest的项目，现在我们通过利用这个项目制作一个简单的留言簿来对django的基础知识进行一个回顾。<br>笔记中本篇对应上传的仓库为:<a href="https://github.com/licheetools/djangoTest对应第三篇截止代码。" target="_blank" rel="noopener">https://github.com/licheetools/djangoTest对应第三篇截止代码。</a></p><h3 id="知识目录"><a href="#知识目录" class="headerlink" title="知识目录"></a>知识目录</h3><p><img src="https://upload-images.jianshu.io/upload_images/8964398-b33bc77f13e0223f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>在前面创建Django的时候，你会出现这样的目录结构，但是在运行命令manage.py runserver 8000之后，你会发现变成了下面这个样子：<img src="https://upload-images.jianshu.io/upload_images/8964398-4782b67ae8fa6a11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>看到没，是不是多了一个<strong>db.sqlite3</strong>文件，这是因为你在运行的时候联接了已经存在的数据库，从而自动生成了一个<strong>sqlite3</strong>文件。</p><p>好，接下来介绍一下该目录树的结构以及各个节点文件的作用（为了更加清楚准确的介绍，我把这个结构树分为了6个部分）：<img src="https://upload-images.jianshu.io/upload_images/8964398-6556357b5c187b63.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>1、<strong>djangoTest</strong>: 这个<strong>djangoTest</strong>与2中的不一样，这是树的开始，也就是主目录；</p><p>2、djangoTest: 这个djangoTest与1中的不一样，这是项目目录，记住主目录和项目目录名称是一样的，且在创建Django项目的开始时候确定；对于2中的文件介绍如下：</p><blockquote><p>–init–.py: 一个空文件，用于告诉计算机这是一个Python包;<br>settings.py: 用于对项目的全局进行配置的文件（该 Django 项目的设置/配置）；<br>urls.py:  主要的urls配置入口（该 Django 项目的 URL 声明; 一份由 Django 驱动的网站”目录”）;<br>wsgi.py:  是Django启动的必须文件（一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目）；</p></blockquote><p>3、templates：它的作用是放置静态的html文件</p><p>4、db.sqlite3: 用于保存数据，开始没有，必须运行之后才有，且不固定，Django默认是sqlite数据库，但你也可以用MySQL，自然文件类型就发生改变了，但都是数据库文件。</p><p>5、manage.py： 一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互（启动Django需要的主要文件，主要的Django命令都通过manage.py来运行)</p><p>6、External Libraries：这是扩展包的入口（外部库存放地址）。</p><p><strong>上面只是project（项目），但是真正来实现各种不同功能的却是各种app（应用）,下面我们来利用pycharm创建app。</strong></p><h3 id="项目与应用"><a href="#项目与应用" class="headerlink" title="项目与应用"></a>项目与应用</h3><p>你可能会有疑惑，我们之前都已经创建了djangoTest这个项目，为什么还要创建各种app应用呢？别急，我来告诉你其中的原因，我们以常用的手机软件<strong>微信</strong>来说明这个道理。你知道微信这个手机软件的名字对吧，其实这个名字就是一个项目，而且你还知道微信可以用来语音聊天，视频聊天，发图片，文字。。。等，这些不同的功能我们就称之为应用。现在明白了吧，不同功能的应用构成了项目。那么问题来了，我们如何利用Pycharm来创建app呢？</p><h3 id="利用Pycharm创建app"><a href="#利用Pycharm创建app" class="headerlink" title="利用Pycharm创建app"></a>利用Pycharm创建app</h3><p>第一步：在 Tools -&gt; Run manage.py Task进入创建app的命令入口；<br><img src="https://upload-images.jianshu.io/upload_images/8964398-c5d96b6dfeb5e080.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><img src="https://upload-images.jianshu.io/upload_images/8964398-ef7bc42eaadce829.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>第二步：在命令入口输入创建命令<strong>startapp appname</strong>,然后回车即可。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-718f27d622a86fcd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>你会发现生产了一个新的应用，而且目录树的结构发生了变化，多了这么一个东西：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-a2465e0a7de704d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>这个红色框里面的都是我们刚才创建liuyan这个app里面的文件，下面继续给大家介绍一下新目录树的结构和节点文件。</p><blockquote><p>1、migrations:它是一个Python包，里面目前只有–init–.py这个用于计算机识别这个包的空文件，这个包是用来存放数据迁移文件的，每次数据的变动，我们都需要更新数据库，否则会出错，更新的命令是makemigrations和migrate而且顺序不能对换！关于这一点，我后面还会继续说明，这里你只需要有一个大概的认识即可;<br>2、admin.py: 用于身份验证；<br>3、apps.py: app信息；<br>4、models.py： 用于数据定义；<br>5、tests.py： 用于app测试；<br>6、views.py： 用于视图的创建。</p></blockquote><h3 id="创建static文件夹"><a href="#创建static文件夹" class="headerlink" title="创建static文件夹"></a>创建static文件夹</h3><p>当然我们的项目肯定不只有html,肯定还有javascript,css，图片等文件，所以我们需要创建一个static文件用于存放静态的文件。将鼠标移至djangoTest这个主目录上，右键new–&gt; python package–&gt;写入名字static回车即可！如图：<img src="https://upload-images.jianshu.io/upload_images/8964398-140217003fbfac6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h3 id="创建log文件夹"><a href="#创建log文件夹" class="headerlink" title="创建log文件夹"></a>创建log文件夹</h3><p>当然，我们还需要创建log文件夹，用来存放网站的日志文件，这是必不可少的。</p><h3 id="创建media文件夹"><a href="#创建media文件夹" class="headerlink" title="创建media文件夹"></a>创建media文件夹</h3><p>与此同时，因为是Web应用，就必须有一个用于存放用户上传的图片，视频等资源文件夹。</p><p>至此，web的文件夹都已经创建完成了。</p><h3 id="创建apps文件夹"><a href="#创建apps文件夹" class="headerlink" title="创建apps文件夹"></a>创建apps文件夹</h3><p>但是还有一个问题，正如你所知道的一个项目是由很多个app构成的，我们不可能每个app都直接放在项目根目录下，这样会导致我们的文件夹太多了，不利于管理，所以我们可以新建一个apps文件夹，用于存放各个app，这样就好看多了。然后将我们刚才新建的liuyan这个app拖入到apps这个文件夹里面，会自动生成一个<strong>init</strong>文件。</p><p>不过这样做就是有一个坏处，就是我们在导入包的时候可能会出错误，我们需要每次在导入的时候前面加上<strong>apps.</strong>,这样太麻烦了，<img src="https://upload-images.jianshu.io/upload_images/8964398-6c9ded5baf2ee9aa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>但是我有方法可以解决这个问题，往下看：<br>我们可以在apps这个文件夹上面，右键拉到底部，看到Mark Directory as以后单击Sources Root即可，你会发现apps这个文件夹变成了蓝色（前面第一篇有介绍）。<img src="https://upload-images.jianshu.io/upload_images/8964398-f299b3e1a9cc783a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>其实这个方法不是很靠谱，因为你这样做只是让Pycharm知道文件放在哪了，要的时候去哪里找，但是如果你用dos命令去运行，还是因为找不到文件地址而报错的，因为它是根据settings.py来查找文件的。下面介绍另一种更完善的方法。<img src="https://upload-images.jianshu.io/upload_images/8964398-e7195185d50e3aca.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><img src="https://upload-images.jianshu.io/upload_images/8964398-9c3926649345bc41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>在上面，os是用于输入输出的库，前面输出的是当前的项目主目录，后面输出的则是apps这个目录，我们这里采用os.path.join()函数来，将项目的绝对路径与apps进行拼接，返回一个新的地址。</p><p>至此，前期准备我们做完了，接下来便是开始敲我们的留言簿代码了。有朋友问我如何利用Pycharm把代码直接分享（上传）到github 仓库，这里我简单介绍一下。</p><h2 id="利用Pycharm把代码直接上传到github-仓库"><a href="#利用Pycharm把代码直接上传到github-仓库" class="headerlink" title="利用Pycharm把代码直接上传到github 仓库"></a>利用Pycharm把代码直接上传到github 仓库</h2><p>在此之前，你的电脑需要安装git和你必须要有一个github账号，在这里我就不详细介绍这些了，直接开启传送大门，点这里。<br><a href="https://blog.csdn.net/p10010/article/details/51336332" target="_blank" rel="noopener">GitHub的注册与使用（详细图解)</a>或者这个 <a href="https://www.cnblogs.com/Amedeo/p/7664224.html" target="_blank" rel="noopener">GitHub账户注册</a>;<a href="https://jingyan.baidu.com/article/9f7e7ec0b17cac6f2815548d.html" target="_blank" rel="noopener">git的安装和配置</a>。</p><p>接下来的步骤看仔细了，前方高能，请坐好扶稳。<br>1、点击左上角的File,选择Settings，然后选择Version Control，点击出现的GitHub，在出现的页面右上角选择Auth Type,选择password，然后输入你的github账号和密码，再点击下面的Test按钮Test连接是否正常，下面的Clone git repositories using ssh可以勾选一下，最后点击右下角的apply,然后ok一下就可以了。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-ba53dd77e88f34d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>2、将鼠标移至左侧的Git，单击一下，然后选择git的路径之后，基本上点击右下角的apply,然后ok一下就可以了。<img src="https://upload-images.jianshu.io/upload_images/8964398-a3a6416adf50255f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>放大一下，每个人的不一样，这是我的git安装地址：<img src="https://upload-images.jianshu.io/upload_images/8964398-59d0ce57b4c3bf50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>3、点击开始页面顶部的VCS，<img src="https://upload-images.jianshu.io/upload_images/8964398-7fb5142c57f7481e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>然后再点击出现的倒数第三个import into Version Control，再选择出现的最后一个Share project on github，再点击就出现一个窗口，填写你的项目名称，描述，点击share。弹窗让你选择需要上传的项目文件与commit信息输入之后，项目将会上传至github。登录你的github账号，你就会发现你的项目已经上传成功了。<img src="https://upload-images.jianshu.io/upload_images/8964398-7d93e6db861109b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><strong>至此，关于Django的基本知识就先介绍到这里，下篇我将开始利用代码对留言簿这个小应用进行开发</strong></p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零基础使用Django2.0.1打造在线教育网站（二）：开发环境配置</title>
      <link href="/2018/04/09/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2018/04/09/%E9%9B%B6%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8Django2-0-1%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E6%95%99%E8%82%B2%E7%BD%91%E7%AB%99%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>俗话说得好，工欲善其事，必先利其器！开发环境的搭建是你进行程序开发的基础，也是关键所在。网站开发过程中主要用到的软件有Pycharm ，Mysql ，Navicat ， Python下面结合我的版本给大家一一演示如何安装。</p><h2 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h2><h3 id="我的软件版本"><a href="#我的软件版本" class="headerlink" title="我的软件版本"></a>我的软件版本</h3><blockquote><p>Pycharm 我这里没有升级，采用的是JetBrains PyCharm 2017.3.4 x64</p></blockquote><blockquote><p>Mysql ，这里我采用了比较好用的mysql-5.7.21-winx64</p></blockquote><blockquote><p>Navicat ，这里采用了Navicat Premium ，当然其他如 Navicat for Mysql也可以</p></blockquote><blockquote><p>Python，写文章的时候Python3.7.0刚刚发布，鉴于其他插件还没有进行适配，我采用Python3.6.4这个版本进行开发。</p></blockquote><h3 id="Pycharm-的安装"><a href="#Pycharm-的安装" class="headerlink" title="Pycharm 的安装"></a>Pycharm 的安装</h3><p><strong>1、</strong>软件位置<br>PyCharm2017/64位下载地址：<br>链接：<a href="https://pan.baidu.com/s/1nwhmx2D" target="_blank" rel="noopener">https://pan.baidu.com/s/1nwhmx2D</a><br>密码：pc61<br><strong>2、</strong>右击软件压缩包选择解压到pycharm2017<br><a href="https://storage7.cuntuku.com/2018/03/22/D2OdM.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-6bd9455d6585c059.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>3、</strong>在解压文件夹里面找到pycharm-professional-171.3780.47，右击打开。<br><a href="https://storage1.cuntuku.com/2018/03/22/D2Xuy.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-d090d018e228ecbe.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a></p><p><strong>4、</strong>点击Next。<br><a href="https://storage1.cuntuku.com/2018/03/22/DB4xD.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-401daecf0b5be5fa.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>5、</strong>点击Browse更改安装路径，建议安装到除C盘以外的磁盘，可在D盘或者其它盘创建一个PyCharm 2017文件夹，然后点击Next。<br><a href="https://storage6.cuntuku.com/2018/03/22/D2HTp.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-39f20d1ff12a619f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a></p><p><strong>6、</strong>64位系统勾选64-bit launcher，32位系统勾选32-bit launcher，然后点击Next。<br><a href="https://storage7.cuntuku.com/2018/03/22/D2eS0.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-6e86f6e001886a6d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>7、</strong>点击Install。<br><a href="https://storage1.cuntuku.com/2018/03/22/D25Iz.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-e681b6dbb4654373.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a></p><p><strong>8、</strong>安装中（等待5分钟左右）。<br><a href="https://storage6.cuntuku.com/2018/03/22/DBgvW.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-4d03159b02db1227.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>9、</strong>点击Finish。<br><a href="https://storage6.cuntuku.com/2018/03/22/D2nbl.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-6485a9f766504a6b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>10、</strong>找到安装包解压后的PyCharm 2017文件夹，右击打开。<br><a href="https://storage7.cuntuku.com/2018/03/22/DBNg3.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-544e15ae5eeac9a0.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a></p><p><strong>11、</strong>找到lib文件夹，右击打开。<br><a href="https://storage6.cuntuku.com/2018/03/22/DBvVR.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-c32ad54468b4b51b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>12、</strong>选中其中的resource.cn.jar，右击复制。<br><a href="https://storage7.cuntuku.com/2018/03/22/DBC5y.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-73b4f131c1b36a4d.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>13、</strong>打开安装文件夹PyCharm 2017里的lib文件夹，然后在空白处鼠标右击选择粘贴。<br><a href="https://storage6.cuntuku.com/2018/03/22/D2Gue.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-ec1fdb371f768f9b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>14、</strong>在桌面找到JetBrainsPyCharm 2017.1 x64，右击打开。<br><a href="https://storage7.cuntuku.com/2018/03/22/D2ReB.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-7c125f41609a2d9c.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>15、</strong>点击确定。<br><a href="https://storage1.cuntuku.com/2018/03/22/DBUvT.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-afaa4159c529fd60.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>16、</strong>点击Accept。<br><a href="https://storage1.cuntuku.com/2018/03/22/DB1M6.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-f91ef28ad95f934f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>17、</strong>勾选License server，在License server address：处填入<a href="http://intellij.mandroid.cn/" target="_blank" rel="noopener">http://intellij.mandroid.cn/</a> （或<a href="http://idea.imsxm.com/" target="_blank" rel="noopener">http://idea.imsxm.com/</a> 或<a href="http://idea.iteblog.com/key.php%EF%BC%89%E4%B8%89%E8%80%85%E4%B8%AD%E7%9A%84%E4%BB%BB%E6%84%8F%E4%B8%80%E4%B8%AA%E5%8D%B3%E5%8F%AF%EF%BC%8C%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BBActivate%E3%80%82" target="_blank" rel="noopener">http://idea.iteblog.com/key.php）三者中的任意一个即可，然后点击Activate。</a><br><a href="https://storage6.cuntuku.com/2018/03/22/DBfMC.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-3e289ec77aafd95a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="16"></a> </p><p><strong>18、</strong>点击确定。<br><a href="https://storage7.cuntuku.com/2018/03/22/DB8Yf.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-6aba44c894ff9948.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a> </p><p><strong>19、</strong>安装完成。<br><a href="https://storage1.cuntuku.com/2018/03/22/DB9b7.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/8964398-251bc702b8cd162e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></a><br><strong>这个破解版的验证码可能在今年10月份左右就要过期，你到时候告诉我，我给你找一个新的破解码。</strong></p><h3 id="Mysql的安装"><a href="#Mysql的安装" class="headerlink" title="Mysql的安装"></a>Mysql的安装</h3><p><strong>1、下载压缩包</strong></p><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">下载地址</a><br><img src="https://upload-images.jianshu.io/upload_images/8964398-5ca6a4d9a1aba8e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>2、解压到文件夹目录下</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-f2f4b7ff1541738c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>3、新建txt文件内容如下：</strong>设置mysql客户端默认字符集**</p><p>default-character-set=utf8</p><p><strong>设置3306端口</strong></p><p>port = 3306</p><p><strong>设置mysql的安装目录</strong></p><p>basedir=D:\Program Files\mysql-5.7.21-winx64</p><p><strong>设置mysql数据库的数据的存放目录</strong></p><p>datadir=D:\Program Files\mysql-5.7.21-winx64\data</p><p><strong>允许最大连接数</strong></p><p>max_connections=200</p><p><strong>服务端使用的字符集默认为8比特编码的latin1字符集</strong></p><p>character-set-server=utf8</p><p><strong>创建新表时将使用的默认存储引擎</strong></p><p>default-storage-engine=INNODB</p><p>注：basedir和datadir的路径为自己的mysql存放的路径，文件名改成my.ini</p><p><strong>4  添加bin目录到path环境变量</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-cd834e29d47e9d27.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>5 安装 MySQL服务，以管理员身份运行cmd</strong></p><p>执行 mysqld install 命令</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-643f118e3fae68c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>若出现“缺少xxx.dll，请安装微软运行库</p><p><a href="http://www.pc6.com/softview/SoftView_104246.html" target="_blank" rel="noopener">http://www.pc6.com/softview/SoftView_104246.html</a></p><p><strong>6 生成data目录（MySQL 5.7.16往后默认是不提供data目录的）,先要进入bin目录下</strong></p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-b7a4895d4e32d205.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><img src="https://upload-images.jianshu.io/upload_images/8964398-73b726ce792763b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>运行 mysqld –initialize-insecure –user=mysql</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-1448a95597d04114.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>查看data文件夹</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-e4735c229dfc43fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>查看data目录内容是否正确</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-6b6fb91b6926e8f9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>7  运行MySQL服务</strong></p><p>net start mysql</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-2f39b42622e911be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>关闭MySQL服务的命令是net stop mysql</p><p>8  登陆MySQL</p><p>mysql -u root –p</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-67df9096636696cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>所有命令：安装服务 mysqld install</p><pre><code>进入bin目录 cd E:\mysql-5.7.21-winx64\bin生成data文件夹 mysqld --initialize-insecure --user=mysql启动服务   net start mysql登录 mysql -u root –p</code></pre><p>修改密码：</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-7142b21a0458a91b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>在忘记root密码的时候，可以这样</strong></p><p><strong>以windows为例：</strong></p><p>1. 关闭正在运行的MySQL服务。</p><p>2. 打开DOS窗口，转到mysql\bin目录。</p><p>3. 输入mysqld –skip-grant-tables 回车。–skip-grant-tables 的意思是启动MySQL服务的时候跳过权限表认证。</p><p>4. 再开一个DOS窗口（因为刚才那个DOS窗口已经不能动了），转到mysql\bin目录。</p><p>5. 输入mysql回车，如果成功，将出现MySQL提示符 &gt;。</p><p>6. 连接权限数据库： use mysql; 。</p><p>6. 改密码：update user set authentication_string=password(“你的密码”) where User=”root”;（别忘了最后加分号） 。</p><p>7. 刷新权限（必须步骤）：flush privileges;　。</p><p>8. 退出 quit。</p><p>9. 注销系统，再进入，使用用户名root和刚才设置的新密码123登录。</p><h3 id="Navicat的安装"><a href="#Navicat的安装" class="headerlink" title="Navicat的安装"></a>Navicat的安装</h3><p>步骤一 打开Navicat应用程序.exe文件。或将Navicat CD安装光盘插入CD-ROM驱动器，打开Navicat.exe 文件。</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-7e93d6a71e62666a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="0"></p><p>步骤二 在欢迎画面点击“下一步”。</p><p><img src="http://upload-images.jianshu.io/upload_images/8964398-b59309f71e5159e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>步骤三 阅读许可协议，接受并点击“下一步”。</p><p><img src="http://upload-images.jianshu.io/upload_images/8964398-b3c41f29a829c78c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>步骤四 选择安装位置。点击“浏览”自定义安装路径，设定完成后点击“下一步”。考虑到运行速度，尽量不要安装在C盘。</p><p><img src="http://upload-images.jianshu.io/upload_images/8964398-be9ca29a49189112.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>步骤五 运行其余的步骤。</p><p><img src="https://upload-images.jianshu.io/upload_images/8964398-88d1948d0c99bddc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>步骤六 点击“完成”，结束安装进程。</p><p><img src="http://upload-images.jianshu.io/upload_images/8964398-fd49020988775b4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>步骤七 点击帮助-&gt;注册，在弹出的注册对话框内输入Navicat注册码（16 位数）并点击“激活”按钮进行在线激活注册码。</p><p><img src="http://upload-images.jianshu.io/upload_images/8964398-a359883e5fd81315.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p><strong>Navicat Premium注册码：NUYJ-W56S-3YUU-MVHV</strong><br>其余版本的可以参考这个<a href="https://www.jianshu.com/p/42a33b0dda9c" target="_blank" rel="noopener">链接</a></p><h3 id="Python的安装"><a href="#Python的安装" class="headerlink" title="Python的安装"></a>Python的安装</h3><p><a href="https://www.python.org/downloads/release/python-364/" target="_blank" rel="noopener">官网传送Python3.6.4版本下载链接</a><br>由于Python的安装非常简单，我这里就不演示了。你可以参考这个链接<a href="https://jingyan.baidu.com/article/3ea51489bebde652e61bbad3.html" target="_blank" rel="noopener">python3.6.3安装教程</a>。</p><h2 id="virtualenv的安装和配置"><a href="#virtualenv的安装和配置" class="headerlink" title="virtualenv的安装和配置"></a>virtualenv的安装和配置</h2><h3 id="使用虚拟环境的好处"><a href="#使用虚拟环境的好处" class="headerlink" title="使用虚拟环境的好处"></a>使用虚拟环境的好处</h3><p>我们希望每个应用都有属于自己的一套独立Python运行环境，这样可以不被其他应用所影响。virtualenv就是用来为一个应用创建一套隔离的Python运行环境，它很好的解决了各种包的管理和升级问题，使开发具有很大的自由性。</p><h3 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h3><p>我们同样需要在Python的官网上去下载，下载完成之后，解压到一个文件夹<code>(记住要和Python放在同一目录下)</code>，采用添加环境变量的方法<code>（我的电脑，右键--&gt;属性,单击--&gt;高级系统环境设置，单击--&gt;高级，单击--&gt;环境变量，单击--&gt;系统变量下的Path）</code>，我们在PATH最后添加上Python中的scripts的地址，再用CMD控制台进入解压目录<code>(举个例子：你当前在C盘要进入F盘只需要输入F:，回车即可。cd用于进入子目录，比如)进入F盘下的Python目录， 只需输入cd Python回车即可，cd与Python之间空一格</code>，</p><blockquote><p>C:\Users\YC-Jiang&gt;F:<br>F:&gt;cd Python<br>F:\Python&gt;cd pystall<br>F:\Python\pystall&gt;</p></blockquote><p>然后输入：<code>python setup.py install</code>回车，等待几分钟即可。</p><p>最后，确认你的 pip 是否成功安装，在命令行输入 cmd （ windows 桌⾯面–&gt;快速启动–&gt;附件<br>–&gt;cmd，看到以管理员身份运行类似的话，点击确定）或者<code>Windows徽标+R</code>中输入</p><blockquote><p>pip -—version</p></blockquote><p>小白请注意：需要输入空格，注意有两条-，注意需要直接在命令行执行而不是输入<br>python 之后再执行（这一段中文是写给你的提醒，不是你要敲到终端里执行的语句）</p><p>如果已经成功<strong>安装 pip</strong>，会提示类似下面的：</p><blockquote><p>pip 1.5.6 from C:\Python35\lib\site-packages\pip-1.5.6-py3.5.egg</p></blockquote><p>pip 后面的数字是版本号，from后面的是pip的安装路径，具体的版本号和路径是什么<br>每个人都会不同，但只要电脑返回类似这样的提示就说明 pip 安装成功了。</p><p>如果你的电脑没有返回类似上的提示，而是有报错提示你 pip 没有被定义，请参考<br>这个方法为你的 Windows电脑安装pip: <a href="https://taizilongxu.gitbooks.io/stackoverflowabout-python/content/8/README.html" target="_blank" rel="noopener">pip安装问题</a><br><a href="https://jingyan.baidu.com/article/ff42efa9d630e5c19e220207.html" target="_blank" rel="noopener">windows安装pip</a></p><h3 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h3><p>在终端输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv </span><br><span class="line">virtualenv testvir  # 在当前用户目录(win+r %HOMEPATH%可查看)生成</span><br><span class="line">cd %homepath%</span><br><span class="line">cd testvir</span><br><span class="line">cd Scripts</span><br><span class="line">activate.bat  # 激活</span><br><span class="line">pip list </span><br><span class="line">deactivate.bat</span><br></pre></td></tr></table></figure></p><p>其实这种方法挺麻烦的，这里我推荐一种简单方法，<strong>安装virtualenvwrapper</strong></p><h3 id="安装virtualenvwrapper"><a href="#安装virtualenvwrapper" class="headerlink" title="安装virtualenvwrapper"></a>安装virtualenvwrapper</h3><p>在终端输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenvwrapper-win</span><br></pre></td></tr></table></figure></p><p>接下来便是创建虚拟环境了，同样采用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkvirtualenv djangoTest  # djangoTest为你新建虚拟环境的名称</span><br></pre></td></tr></table></figure></p><p>它会创建在C:\Users\YC\Envs当前用户目录下的Envs目录。</p><p>你可以自定义修改mkvirtualenv创建的目录：新增环境变量WORKON_HOME<br><img src="https://upload-images.jianshu.io/upload_images/8964398-4f6aefde07e8c27b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><strong>退出激活状态命令</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deactivate</span><br></pre></td></tr></table></figure></p><p><strong>知道有哪些虚拟环境命令</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workon</span><br></pre></td></tr></table></figure></p><p><strong>直接进入虚拟环境命令</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">workon djangoTest</span><br></pre></td></tr></table></figure></p><p>如果出现这种情况，表示你已经进入到虚拟环境中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Envs\Test\django(djangoTest)</span><br></pre></td></tr></table></figure></p><p>再次说明，出现前面的(djangoTest)就代表进入了虚拟环境，之后就可以进行包和库的安装了。</p><h3 id="使用镜像安装库"><a href="#使用镜像安装库" class="headerlink" title="使用镜像安装库"></a>使用镜像安装库</h3><p>有的时候，由于一些包的安装地址在外国，所以国内的下载速度很慢，甚至可能会出现链接不上的问题。鉴于此，我推荐使用镜像加速下载，速度真的很快。这里推荐清华园的<a href="https://mirrors.tuna.tsinghua.edu.cn/help/pypi/" target="_blank" rel="noopener">镜像</a>,并简单介绍一下如何使用。正常我们下载Django的命令是：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==2.0.1</span><br></pre></td></tr></table></figure></p><p>(请指定django的下载版本，否则将会是最新版的django)，使用镜像以后，我们的命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django==2.0.1 -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></p><p>(注：上面命令的空格和顺序都是不能随意变得，否则就会出错，特别是空格！)</p><h2 id="简单介绍一下各个软件的基本使用"><a href="#简单介绍一下各个软件的基本使用" class="headerlink" title="简单介绍一下各个软件的基本使用"></a>简单介绍一下各个软件的基本使用</h2><h3 id="Pycharm安装第三方库"><a href="#Pycharm安装第三方库" class="headerlink" title="Pycharm安装第三方库"></a>Pycharm安装第三方库</h3><p>File–&gt;Default Settings–&gt;Version Control–&gt;Project InterPreter–&gt;<br>右边绿色的+ –&gt;搜索库名–&gt;install package  ，不懂的童鞋可以点击下面的示例：<a href="http://blog.csdn.net/fx677588/article/details/56830929" target="_blank" rel="noopener">Pycharm安装第三库</a>，Django也是可以利用这样的方式进行安装，但是速度不及使用pip安装的快。</p><h3 id="Pycharm新建Django项目"><a href="#Pycharm新建Django项目" class="headerlink" title="Pycharm新建Django项目"></a>Pycharm新建Django项目</h3><p>首先如果你已经打开了其他项目，你需要File–&gt;Close project，然后和没有项目的步骤一样如下：<br>1、点击出现的Create New Project按钮；<br><img src="https://upload-images.jianshu.io/upload_images/8964398-ce56513f6ac9c901.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1"><br>2、安装过程如下顺序；<br><img src="https://upload-images.jianshu.io/upload_images/8964398-f96afd5efa1e24cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="2"><br><strong>顺序解读</strong></p><blockquote><p>1、选择使用的是django项目，即可进入右侧页面；</p></blockquote><blockquote><p>2、Location: F:\Django\untitled ,它表示你创建的Django项目的存放地址，以后各个文件就在这里，我这里是untitled文件夹下，这个名称是默认的，你可以自行修改。</p></blockquote><blockquote><p>3、Project interpreter：表示的是你这个项目的Python解释器，下面7那个则是已经存在的Python解释器，我们推荐自己使用独立的解释器。所以点击3以后，再点击4 ，下拉4你会发现还有一个Conda，但是我们不选这个，选用Virtualenv这个，也就是第一个。</p></blockquote><blockquote><p>4、接下来我们看5这步，此处的Location是指你这个项目虚拟环境存放的位置文件夹，一般情况下，我们都取和项目一样的名称（前提是你前面没有创建虚拟环境，这里Pycharm自动帮你创建了，如果之前已经创建了，那么选择已经存在的虚拟环境即可）。6这一步是具体到你这个项目用的是哪个Python.exe程序，它一般在你虚拟环境下面的Scripts\pyhton.exe这个程序。</p></blockquote><blockquote><p>5、最后7这步你不用考虑，因为我们开发都是采用独立的开发环境，不会用到已经存在的环境，当然特殊情况除外。</p></blockquote><p>然后就出现</p><h2 id="完整过程演示"><a href="#完整过程演示" class="headerlink" title="完整过程演示"></a>完整过程演示</h2><h3 id="1、创建虚拟环境djangoTest"><a href="#1、创建虚拟环境djangoTest" class="headerlink" title="1、创建虚拟环境djangoTest"></a>1、创建虚拟环境djangoTest</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Microsoft Windows [版本 10.0.14393]</span><br><span class="line">(c) 2016 Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">C:\Users\YC&gt;F:  # 进入F盘</span><br><span class="line"></span><br><span class="line">F:\&gt;cd Envs   # 进入到Envs这个文件夹</span><br><span class="line"></span><br><span class="line">F:\Envs&gt;mkvirtualenv djangoTest     # 创建虚拟环境djangoTest</span><br><span class="line">Using base prefix &apos;f:\\python\\pystall&apos;</span><br><span class="line">New python executable in F:\Envs\djangoTest\Scripts\python.exe       # 看到没，新的解释器位置</span><br><span class="line">Installing setuptools, pip, wheel...done.</span><br><span class="line"></span><br><span class="line">(djangoTest) F:\Envs&gt;    # 表示已经进入到djangoTest这个虚拟环境中</span><br></pre></td></tr></table></figure><h3 id="2、安装Django2-0-1"><a href="#2、安装Django2-0-1" class="headerlink" title="2、安装Django2.0.1"></a>2、安装Django2.0.1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(djangoTest) F:\Envs&gt;pip install django==2.0.1 -i https://pypi.tuna.tsinghua.edu.cn/simple     # 采用清华镜像源安装django</span><br><span class="line"></span><br><span class="line">Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">Collecting django==2.0.1</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/21/2a/3a0ec97b18d6e8d295142228f03604ac78ea6de05cf9bc3773a74f0b58bb/Django-2.0.1-py3-none-any.whl (7.1MB)</span><br><span class="line">    100% |████████████████████████████████| 7.1MB 2.9MB/s</span><br><span class="line">Collecting pytz (from django==2.0.1)</span><br><span class="line">  Downloading https://pypi.tuna.tsinghua.edu.cn/packages/30/4e/27c34b62430286c6d59177a0842ed90dc789ce5d1ed740887653b898779a/pytz-2018.5-py2.py3-none-any.whl (510kB)</span><br><span class="line">    100% |████████████████████████████████| 512kB 1.5MB/s</span><br><span class="line">Installing collected packages: pytz, django</span><br><span class="line">Successfully installed django-2.0.1 pytz-2018.5     # 提示已经安装成功了，新版本会自动安装pytz这个库</span><br><span class="line"></span><br><span class="line">(djangoTest) F:\Envs&gt;     # 然后就可以开始pip安装库和包了</span><br></pre></td></tr></table></figure><h3 id="3、创建我们的django项目"><a href="#3、创建我们的django项目" class="headerlink" title="3、创建我们的django项目"></a>3、创建我们的django项目</h3><p>打开Pycharm，新建django项目，个步骤如下：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-997299e8cdc999cb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="djangotest.png"><br>最后点击确定按钮即可，进入到如下页面：<br><img src="https://upload-images.jianshu.io/upload_images/8964398-f7650c5beb3fc7ab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="tt.png"><br>放大一下：<img src="https://upload-images.jianshu.io/upload_images/8964398-b33bc77f13e0223f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="qq.png"><br>这里面各个目录和文件的具体意思，下篇文章介绍，这里我就不详细说明了。</p><p>然后单击运行按钮运行一下。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-f6b06d87bcb02ab8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="uuu.png"><br><img src="https://upload-images.jianshu.io/upload_images/8964398-bfcbef10635b01b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="cc.png"><br>出现这个界面以后，在浏览器导航栏中输入<strong><a href="http://127.0.0.1:8000/" target="_blank" rel="noopener">http://127.0.0.1:8000/</a></strong> 然后回车，如果出现下面的界面，表明你的djangoTest项目可以正常使用了！<br><img src="https://upload-images.jianshu.io/upload_images/8964398-be26a5132d9efa11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><strong>在pycharm中按Ctrl+C即可停止运行！</strong></p><p>不知道你注意没有，这个dajngoTest是灰色的，<img src="https://upload-images.jianshu.io/upload_images/8964398-e6290ca087b0abbb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>我们可以右键mark为source Root目录，就变成了蓝色，<img src="https://upload-images.jianshu.io/upload_images/8964398-ec848017b015f7bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>这样做的好处就是可以避免包的导入问题，我们在import模块时pycharm会根据设置从而智能提示。如果不mark可能会出现很多我们在pycharm中报红色，但是cmd可以运行的情况。<br><strong>至此，关于djangoTest项目的介绍就先到这里。下面介绍navicat基本使用</strong></p><h3 id="navicat基本使用"><a href="#navicat基本使用" class="headerlink" title="navicat基本使用"></a>navicat基本使用</h3><p><strong>1、新建连接</strong><br><img src="https://upload-images.jianshu.io/upload_images/8964398-7d5453b515d49067.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>在出现的下拉菜单里，选择MySQL，其他的类似。<img src="https://upload-images.jianshu.io/upload_images/8964398-cc65ce0e5dd4754e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>连接名和主机名一般写本地地址127.0.0.1或者localhost，端口默认3306，这里用户名和密码我均设置为root，然后点击左边的连接测试，如果出现连接成功的提示框，便点击确定，和这个框的确定。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-9cb79140373159f2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>双击这个连接，如果该连接由灰色变为绿色的时候，就可以开始右键它，出现新建数据库，然后如下所示：<img src="https://upload-images.jianshu.io/upload_images/8964398-0b8487bffbf9766f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>数据库名可以随便写，这里我写的是djangoTest这个项目名称，字符集选择图上所示那个，不要选择其他类型，这个很重要！排序规则选择第一个即可，也就是图上所示，这个也很重要，请按照图上要求，否则后期中文编码会出现编码错误。</p><p><strong>2、新建数据表</strong><br>双击数据库testdjango使它变绿，然后选中表，再右键新建表。或使用右侧新建表按钮也可以。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-1203407193d01fe7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>接下来就是正常的增加数据了。<br><img src="https://upload-images.jianshu.io/upload_images/8964398-bd265ce09fa02706.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>点击右侧上方的查询按钮，再点击下面的新建查询按钮，输入查询语句就可开始查询！<img src="https://upload-images.jianshu.io/upload_images/8964398-2dfebd3ec331f6f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br><strong>3、表的复制粘贴与数据库传输以及数据库导入导出</strong><br>Navicat支持我们把不同数据库的表进行复制粘贴操作同时还支持数据传输，你可以点击工具数据传输即可，是不是很简单。</p><p><strong>导入</strong>：右键点击运行SQL文件。<br><strong>导出</strong>：在需要导出的数据库上右键，可以转储SQL文件也可以选择只转存结构或连带数据一起转存。</p><p><strong>至此，关于项目开发环境的搭建就先介绍到这里，下篇我将利用之前建立的djangoTest项目来简单回顾一下django的基础知识</strong></p>]]></content>
      
      
      <categories>
          
          <category> django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于博主</title>
      <link href="/2017/03/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E4%B8%BB/"/>
      <url>/2017/03/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E4%B8%BB/</url>
      
        <content type="html"><![CDATA[<p>我，一个正在进击的技术控，相信越努力，越自由。<br><br>非常高兴能和大家在这里相遇。这是我的个人博客，搭建的初衷是广交朋友，广学知识。<br><br>那么你肯定觉得我是一个技术大牛（哈哈），其实我只是一个技术控，对那些有趣的技术非常好奇罢了，<br>离真正的大神还差一个”地中海”式的发型。<br><br>目前主要从事前端工作，但是非常喜欢java， python， kotlin等编程语言，所以你如果也有此爱好的话，<br>我们不妨交流一下学习心得。<br><br>今后我会在这个博客上更新一些有趣的技术和分享我学习，工作，生活上的点滴瞬间。<br><br>你不努力一下，你就体会不到被人追赶的滋味.<br><br>生活不只有<strong>Coding</strong>还有诗和远方~~~<br><br>喜欢旅游，看电影，偶尔还玩会游戏（最近在玩王者荣耀，尽管队友坑，但我也坑。。。）<br><br>对了，有一些技术上的问题可以给我发微信消息（事情多，不能立即回复，甚至忘记回复，还请不要生气）。<br><br>我在很多社区都有账号，需要联系我的朋友可以关注并加好友呃……<br></p><p><i class="icon-envelope"></i> 邮箱: <a href="mailto:2810706745@qq.com" target="_blank" rel="noopener">2810706745@qq.com</a><br><i class="icon-comment"></i>  QQ:  2810706745<br><i class="icon-comments"></i> 微信: ZY20160801<br><i class="icon-weibo"></i> 新浪微博: <a href="https://weibo.com/2809144261/profile?rightmod=1&amp;wvr=6&amp;mod=personinfo&amp;is_all=1" target="_blank" rel="noopener">点击这里</a><br><i class="icon-github"></i> GitHub: <a href="https://github.com/licheetools" target="_blank" rel="noopener">点击这里</a><br><br></p><blockquote><ul><li style="list-style: none"><input type="checkbox"> <strong>声明</strong>：</li><li style="list-style: none"><input type="checkbox" checked> <strong>1.</strong>本博客文章只是为了个人学习以及在一些技术型社区发表，不做商业使用;</li><li style="list-style: none"><input type="checkbox" checked> <strong>2.</strong>如其中引用到其他文章经典的部分，本人大部分都会加上引用或者在文章底部的参考文献中注明，如果不慎引用了你的文章但是却没有注明的请联系我;</li><li style="list-style: none"><input type="checkbox" checked> <strong>3.</strong>博客内文章欢迎转载，但转载前请联系我，保留出处和作者，不做商业使用，谢谢~~~ </li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> about </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 关于博主 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你有什么话，想对我说嘛？</title>
      <link href="/2017/03/03/%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E8%AF%9D%EF%BC%8C%E6%83%B3%E5%AF%B9%E6%88%91%E8%AF%B4%E5%98%9B%EF%BC%9F/"/>
      <url>/2017/03/03/%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E8%AF%9D%EF%BC%8C%E6%83%B3%E5%AF%B9%E6%88%91%E8%AF%B4%E5%98%9B%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> liuyan </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 留言板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战系列：（二）猫途鹰(tripadvisor)旅游景点信息爬取</title>
      <link href="/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%BA%8C%EF%BC%89%E7%8C%AB%E9%80%94%E9%B9%B0(tripadvisor)%E6%97%85%E6%B8%B8%E6%99%AF%E7%82%B9%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/"/>
      <url>/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%BA%8C%EF%BC%89%E7%8C%AB%E9%80%94%E9%B9%B0(tripadvisor)%E6%97%85%E6%B8%B8%E6%99%AF%E7%82%B9%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>在上一篇中，我们说到某个内容从属于多个分类(即它有多个标签)，应该如何把它所属的全部标签都爬取下来呢？这一期博主就将教你如何实现这一功能。我们以<a href="https://www.tripadvisor.cn/Attractions-g60763-Activities-New_York_City_New_York.html" target="_blank" rel="noopener">猫途鹰</a>这个网站为例，向大家演示一下。</p><h2 id="爬取内容"><a href="#爬取内容" class="headerlink" title="爬取内容"></a>爬取内容</h2><p>如下图所示，我们需要爬取该图中所示景点的信息，具体包括：标题，封面图片，分类等信息。</p><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><h3 id="get-方法的使用"><a href="#get-方法的使用" class="headerlink" title="get()方法的使用"></a>get()方法的使用</h3><p>我们在上一篇中，获取标题，地址，单标签的文本信息采用了get_text()方法，但是如果要获取图片呢？我们是不能和之前一样，要采用一种新的方法：get(‘attr’)。这么说你可能有些困惑，举个简单的例子，看下面的代码:<br><code>&lt;a href=http://licheetools.top&gt; share my life with you &lt;/a&gt;</code><br>如果你只想获取网站信息，只需要.get(‘href’)即可。获取图片只需要.get(‘src’)因为图片的格式一般是这样的：<code>&lt;img src=&quot;http://licheetools.top/index.html/first.jpg&quot; alt=&quot;第一张图片&quot;&gt;</code></p><h3 id="stripped-strings的用法"><a href="#stripped-strings的用法" class="headerlink" title="stripped_strings的用法"></a>stripped_strings的用法</h3><p>在这里你可以认为是高级的get_text(),它这个可以同时取出多个文本，待会就采用这个来爬取多个标签。</p><h3 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h3><p>字符串的格式化通常采用{}和:来代替传统的%方式，具体如下：<br><strong>1、使用位置参数</strong><br>从下面的例子可以看出位置参数不受顺序约束，且可以为{},只要format里有相对应的参数值即可,参数索引从0开，传入位置参数列表可用*列表；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'my name is &#123;&#125; ,age &#123;&#125;'</span>.format(<span class="string">'joe'</span>,<span class="number">18</span>)</span><br><span class="line">print(a)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">18</span></span><br><span class="line"></span><br><span class="line">b=<span class="string">'my name is &#123;1&#125; ,age &#123;0&#125;'</span>.format(<span class="number">10</span>,<span class="string">'joe'</span>)</span><br><span class="line">print(b)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">10</span></span><br><span class="line"></span><br><span class="line">c=<span class="string">'my name is &#123;1&#125; ,age &#123;0&#125; &#123;1&#125;'</span>.format(<span class="number">10</span>,<span class="string">'joe'</span>)</span><br><span class="line">print(c)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">10</span> joe</span><br><span class="line"></span><br><span class="line">data=[<span class="string">'joe'</span>,<span class="number">18</span>]</span><br><span class="line">d=<span class="string">'my name is &#123;&#125; ,age &#123;&#125;'</span>.format(*data)</span><br><span class="line">print(d)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">18</span></span><br></pre></td></tr></table></figure></p><p><strong>2、使用关键字参数</strong><br>采用字典当关键字参数传入值，不过关键字参数值要对得上，可以在字典前加**<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="string">'my name is &#123;name&#125;,age is &#123;age&#125;'</span>.format(name=<span class="string">'joe'</span>,age=<span class="number">19</span>)</span><br><span class="line">print(e)</span><br><span class="line">my name <span class="keyword">is</span> joe,age <span class="keyword">is</span> <span class="number">19</span></span><br><span class="line"></span><br><span class="line">data=&#123;<span class="string">'name'</span>:<span class="string">'joe'</span>,<span class="string">'age'</span>:<span class="number">19</span>&#125;</span><br><span class="line">f=<span class="string">'my name is &#123;name&#125;,age is &#123;age&#125;'</span>.format(**data)</span><br><span class="line">print(f)</span><br><span class="line">my name <span class="keyword">is</span> joe,age <span class="keyword">is</span> <span class="number">19</span></span><br></pre></td></tr></table></figure></p><p>其他参数我在这里就不介绍了，你可以看这篇文章<a href="http://www.cnblogs.com/benric/p/4965224.html" target="_blank" rel="noopener">python之字符串格式化(formate)</a></p><h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/04/15 20:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: test_05.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">'https://www.tripadvisor.cn/Attractions-g60763-Activities-New_York_City_New_York.html'</span></span><br><span class="line">urls=[<span class="string">'https://www.tripadvisor.cn/Attractions-g60763-Activities-oa&#123;&#125;-New_York_City_New_York.html#FILTERED_LIST'</span>.format(str(i)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">1140</span>,<span class="number">30</span>)]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_attraction</span><span class="params">(url,data=None)</span>:</span></span><br><span class="line">    web_data = requests.get(url)</span><br><span class="line">    time.sleep(<span class="number">4</span>)</span><br><span class="line">    soup = BeautifulSoup(web_data.text, <span class="string">'lxml'</span>)</span><br><span class="line">    titles = soup.select(<span class="string">'div.listing_title &gt; a[target="_blank"]'</span>)</span><br><span class="line">    images = soup.select(<span class="string">'img[width="180"]'</span>)</span><br><span class="line">    cates = soup.select(<span class="string">'div.tag_line &gt; div'</span>)</span><br><span class="line">    <span class="keyword">for</span> title,image,cate <span class="keyword">in</span> zip(titles,images,cates):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'title'</span>:title.get_text(),</span><br><span class="line">            <span class="string">'image'</span>:image.get(<span class="string">'src'</span>),</span><br><span class="line">            <span class="string">'cate'</span>:list(cate.stripped_strings),</span><br><span class="line">        &#125;</span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line">get_attraction(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> single_url <span class="keyword">in</span> urls:</span><br><span class="line">    get_attraction(single_url)</span><br><span class="line"></span><br><span class="line">print(urls)</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>由于抓取的内容太多，这里只呈现部分信息。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'曼哈顿天际线'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'大都会艺术博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'艺术博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'中央公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'公园'</span>, <span class="string">','</span>, <span class="string">'景观步行区'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'9/11纪念馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'古迹'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'峭石之巅观景台'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'观景台'</span>, <span class="string">','</span>, <span class="string">'瞭望台'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'布鲁克林大桥'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'桥梁'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣帕提克大教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'教堂'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'百老汇'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'大中央车站'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'建筑'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'布莱恩公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'纽约公共图书馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'世贸一号观景台'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'观景台'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'史泰登岛渡轮'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'轮渡'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'高线公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景观步行区'</span>, <span class="string">','</span>, <span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'帝国大厦'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'建筑'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'观景台'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'自由女神像'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'洛克菲勒中心'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'现代艺术博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'艺术博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'The Oculus'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'无畏海空宇宙博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'阿波罗剧院'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'华盛顿广场公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣保罗教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣约翰教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'周边'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'河滨公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'Studio 54'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'教堂'</span>, <span class="string">','</span>, <span class="string">'圣地与宗教景点'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'埃利斯岛'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'圣地与宗教景点'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'切尔西市场'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'商人之家博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'哈德逊河公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'艾利斯岛移民博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'犹太遗产博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'历史博物馆'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'古迹'</span>]&#125;</span><br><span class="line"></span><br><span class="line">。。。。。。</span><br></pre></td></tr></table></figure></p><h2 id="下期说明"><a href="#下期说明" class="headerlink" title="下期说明"></a>下期说明</h2><p>哈哈，今天总的来说还是比较简单的，容易操作，下期我们准备爬点不一样的东西。。。</p><p>今天的分享就到这里了，如果你有任何不懂的问题，可以发信息或者留言喽。</p>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫实战系列：（一）58同城-转转商品信息爬取</title>
      <link href="/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%8958%E5%90%8C%E5%9F%8E-%E8%BD%AC%E8%BD%AC%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/"/>
      <url>/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%8958%E5%90%8C%E5%9F%8E-%E8%BD%AC%E8%BD%AC%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>本系列教程记录了博主的爬虫之路，可谓是有苦又累，有甜有笑，如果你在看过本系列教程之后，对爬虫<br>有独到的见解或者浓厚的兴趣，不妨留言和博主进行交流学习呢，我在这里等你来玩~~~</p><h2 id="爬取内容"><a href="#爬取内容" class="headerlink" title="爬取内容"></a>爬取内容</h2><p>如下图所示，我们需要爬取该图中所示商品的信息，具体包括：类目，标题，价格，浏览量，所在区域<br>等信息。<br><img src="https://storage6.cuntuku.com/2018/03/31/DBHP3.png" alt="DBHP3.png"></p><h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><h3 id="字典属性法"><a href="#字典属性法" class="headerlink" title="字典属性法"></a>字典属性法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/4/10 15:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: zhuanzhuan.py</span></span><br><span class="line"><span class="comment"># @Website：http：//licheetools.top</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup  <span class="comment">#导入需要的包和模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time   <span class="comment">#用于控制每次爬取的时间间隔</span></span><br><span class="line"></span><br><span class="line">user_agent=<span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) </span></span><br><span class="line"><span class="string">AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User_Agent'</span>:<span class="string">'user_agent'</span></span><br><span class="line">&#125;</span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_attrition</span><span class="params">(url)</span>:</span>   <span class="comment">#定义函数，便于调用</span></span><br><span class="line">    <span class="comment">#url = 'http://zhuanzhuan.58.com/detail/967678151307198471z.shtml</span></span><br><span class="line">    ?fullCate=5%2C38484%2C23094&amp;fullLocal=1&amp;from=pc&amp;metric=null&amp;</span><br><span class="line">    PGTID=<span class="number">0</span>d305a36<span class="number">-0000</span><span class="number">-1792</span>-ee6b<span class="number">-8</span>d43de6b3765&amp;ClickID=<span class="number">7</span><span class="string">'    </span></span><br><span class="line"><span class="string">#此处URL前面的(#)不可删除，否则就出现函数调用错误，因为后面调用的link已经替换此处的url</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)  </span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    casses=soup.select('</span><span class="comment">#nav &gt; div &gt; span &gt; a')</span></span><br><span class="line">    titles=soup.select(<span class="string">'div.box_left_top &gt; h1'</span>)</span><br><span class="line">    moneys=soup.select(<span class="string">'div.price_li &gt; span[class="price_now"] &gt; i'</span>)</span><br><span class="line">    addresses=soup.select(<span class="string">'div.palce_li &gt; span &gt; i'</span>)</span><br><span class="line">    <span class="keyword">for</span> cass,title,money,address <span class="keyword">in</span> zip(casses,titles,moneys,addresses):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'cass'</span>:cass.get_text(),   <span class="comment">#文字调用get_text()方法</span></span><br><span class="line">            <span class="string">'title'</span>:title.get_text(),</span><br><span class="line">            <span class="string">'money'</span>:money.get_text(),</span><br><span class="line">            <span class="string">'address'</span>:address.get_text(),</span><br><span class="line">        &#125;</span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_item_info</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'http://bj.58.com/pbdn/'</span></span><br><span class="line">    web_data=requests.get(url)</span><br><span class="line">    soup=BeautifulSoup(web_data.text,<span class="string">'lxml'</span>)</span><br><span class="line">    href_list=soup.select(<span class="string">'a.t'</span>)</span><br><span class="line">    <span class="keyword">for</span> href <span class="keyword">in</span> href_list:</span><br><span class="line">        link=href.get(<span class="string">'href'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'zhuanzhuan'</span> <span class="keyword">in</span> link:   <span class="comment">#除去网页中不需要的精准推广部分</span></span><br><span class="line">            get_attrition(link)</span><br><span class="line"></span><br><span class="line">get_all_item_info()</span><br></pre></td></tr></table></figure><h3 id="列表索引法"><a href="#列表索引法" class="headerlink" title="列表索引法"></a>列表索引法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/4/10 15:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: zhuanzhuan.py</span></span><br><span class="line"><span class="comment"># @Website：http：//licheetools.top</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">user_agent=<span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X)</span></span><br><span class="line"><span class="string">AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User_Agent'</span>:<span class="string">'user_agent'</span></span><br><span class="line">&#125;</span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_item_info</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment">#url='http://zhuanzhuan.58.com/detail/835458751461588996z.shtml</span></span><br><span class="line">    ?fullCate=5%2C38484%2C23094&amp;fullLocal=1&amp;from=pc&amp;</span><br><span class="line">    metric=null&amp;PGTID=<span class="number">0</span>d305a36<span class="number">-0000</span><span class="number">-123</span>c<span class="number">-630</span>d-da6c51789948&amp;ClickID=<span class="number">1</span><span class="string">'</span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)</span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    title_list=soup.select('</span>h1.info_titile<span class="string">')</span></span><br><span class="line"><span class="string">    title=title_list[0].text   #该列表有且仅有唯一一个元素，采用get_text()将其取出</span></span><br><span class="line"><span class="string">    price_list=soup.select('</span>span.price_now &gt; i<span class="string">')</span></span><br><span class="line"><span class="string">    price=price_list[0].text</span></span><br><span class="line"><span class="string">    views_list=soup.select('</span>span.look_time<span class="string">')</span></span><br><span class="line"><span class="string">    view=views_list[0].text</span></span><br><span class="line"><span class="string">    area_list=soup.select('</span>div.palce_li &gt; span &gt; i<span class="string">')</span></span><br><span class="line"><span class="string">    area=area_list[0].text</span></span><br><span class="line"><span class="string">    cate_list=soup.select('</span>span.crb_i &gt; a<span class="string">')</span></span><br><span class="line"><span class="string">    cate=cate_list[-1].text.strip()  #使用strip()函数来消除换行和空格的影响</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    data=&#123;</span></span><br><span class="line"><span class="string">        '</span>title<span class="string">':title,</span></span><br><span class="line"><span class="string">        '</span>price<span class="string">':price,</span></span><br><span class="line"><span class="string">        '</span>view<span class="string">':view,</span></span><br><span class="line"><span class="string">        '</span>area<span class="string">':area,</span></span><br><span class="line"><span class="string">        '</span>cate<span class="string">':cate,</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    print(data)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def get_all_item_info():</span></span><br><span class="line"><span class="string">    url='</span>http://bj<span class="number">.58</span>.com/pbdn/<span class="string">'</span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)</span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    href_list=soup.select('</span>a.t<span class="string">')</span></span><br><span class="line"><span class="string">    for href in href_list:</span></span><br><span class="line"><span class="string">        link=href.get('</span>hre<span class="string">f')   #获取元素的某个属性采用get()方法来实现</span></span><br><span class="line"><span class="string">        if '</span>zhuanzhuan<span class="string">' in link:</span></span><br><span class="line"><span class="string">            get_item_info(link)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_all_item_info()</span></span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://storage7.cuntuku.com/2018/03/31/DBe6D.png" alt="DBe6D.png"></p><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><h3 id="soup-select-选择标签问题"><a href="#soup-select-选择标签问题" class="headerlink" title="soup.select ( )选择标签问题"></a>soup.select ( )选择标签问题</h3><p>你只需要在浏览器中鼠标右键点击审查(<code>Ctrl+Shift+I</code>) –&gt; 找到字段的具体代码 –&gt; 右键选择Copy –&gt; Copy selector即可得到你想要的代码字段。为保证你是否正确捕抓到相关信息，你可以鼠标右键点击查看网页源代码(<code>Ctrl+U</code>) –&gt;然后再按<code>Ctrl+F</code>调出搜索框 –&gt; 将你刚才捕抓到的信息进行复制黏贴并回车 –&gt; 看右侧的黄色代码区是否是包括你所需信息的最小高亮区，不是则往上一级父级标签查询。</p><h3 id="get-text-和-get-的使用问题"><a href="#get-text-和-get-的使用问题" class="headerlink" title="get_text 和 get()的使用问题"></a>get_text 和 get()的使用问题</h3><p>get_text()，是返回选择的标签文本，具体可以查看<a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/#get-text" target="_blank" rel="noopener">参考文档</a>;而get(‘’)，这是选择标签中的属性(也就是里面有=符号的左边)，<br>比如在<code>&lt;li&gt;&lt;a class=&quot;rrence intnal&quot; href=&quot;#next-siblings-previous-siblings&quot;&gt;&lt;/li&gt;</code>之中，选择li &gt; a这个标签之后，则可以用get(‘href’)获取其中的链接。</p><h2 id="下期说明"><a href="#下期说明" class="headerlink" title="下期说明"></a>下期说明</h2><p>哈哈，今天的内容是不是很简单，不过你是不是有一个疑问，就是如果某个内容从属于多个分类(即它有多个标签)我们应该如何把它所属的全部标签都爬取下来呢？那么下期博主将教你如何实现这一功能。</p><p><strong>本教程适合有一部分Python基础的同学，小白童鞋很抱歉。。。</strong></p><p>今天的分享就到这里了，如果你有任何不懂的问题，可以发信息或者留言喽。</p>]]></content>
      
      
      <categories>
          
          <category> spider </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>行者有梦，千里亦趋</title>
      <link href="/2017/03/01/%E8%A1%8C%E8%80%85%E6%9C%89%E6%A2%A6%EF%BC%8C%E5%8D%83%E9%87%8C%E4%BA%A6%E8%B6%8B/"/>
      <url>/2017/03/01/%E8%A1%8C%E8%80%85%E6%9C%89%E6%A2%A6%EF%BC%8C%E5%8D%83%E9%87%8C%E4%BA%A6%E8%B6%8B/</url>
      
        <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="对不起，此文章为加密内容，只有管理员才能查看." />    <label for="pass">对不起，此文章为加密内容，只有管理员才能查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
