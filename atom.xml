<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>编程思录，记录思考</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://licheetools.github.io/"/>
  <updated>2019-04-13T08:46:42.925Z</updated>
  <id>http://licheetools.github.io/</id>
  
  <author>
    <name>Envy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于博主</title>
    <link href="http://licheetools.github.io/2017/03/04/%E5%85%B3%E4%BA%8E%E5%8D%9A%E4%B8%BB/"/>
    <id>http://licheetools.github.io/2017/03/04/关于博主/</id>
    <published>2017-03-04T08:27:48.000Z</published>
    <updated>2019-04-13T08:46:42.925Z</updated>
    
    <content type="html"><![CDATA[<p>我，一个正在进击的技术控，相信越努力，越自由。<br><br>非常高兴能和大家在这里相遇。这是我的个人博客，搭建的初衷是广交朋友，广学知识。<br><br>那么你肯定觉得我是一个技术大牛（哈哈），其实我只是一个技术控，对那些有趣的技术非常好奇罢了，<br>离真正的大神还差一个”地中海”式的发型。<br><br>目前主要从事前端工作，但是非常喜欢java， python， kotlin等编程语言，所以你如果也有此爱好的话，<br>我们不妨交流一下学习心得。<br><br>今后我会在这个博客上更新一些有趣的技术和分享我学习，工作，生活上的点滴瞬间。<br><br>你不努力一下，你就体会不到被人追赶的滋味.<br><br>生活不只有<strong>Coding</strong>还有诗和远方~~~<br><br>喜欢旅游，看电影，偶尔还玩会游戏（最近在玩王者荣耀，尽管队友坑，但我也坑。。。）<br><br>对了，有一些技术上的问题可以给我发微信消息（事情多，不能立即回复，甚至忘记回复，还请不要生气）。<br><br>我在很多社区都有账号，需要联系我的朋友可以关注并加好友呃……<br></p><p><i class="icon-envelope"></i> 邮箱: <a href="mailto:2810706745@qq.com" target="_blank" rel="noopener">2810706745@qq.com</a><br><i class="icon-comment"></i>  QQ:  2810706745<br><i class="icon-comments"></i> 微信: ZY20160801<br><i class="icon-weibo"></i> 新浪微博: <a href="https://weibo.com/2809144261/profile?rightmod=1&amp;wvr=6&amp;mod=personinfo&amp;is_all=1" target="_blank" rel="noopener">点击这里</a><br><i class="icon-github"></i> GitHub: <a href="https://github.com/licheetools" target="_blank" rel="noopener">点击这里</a><br><br></p><blockquote><ul><li style="list-style: none"><input type="checkbox"> <strong>声明</strong>：</li><li style="list-style: none"><input type="checkbox" checked> <strong>1.</strong>本博客文章只是为了个人学习以及在一些技术型社区发表，不做商业使用;</li><li style="list-style: none"><input type="checkbox" checked> <strong>2.</strong>如其中引用到其他文章经典的部分，本人大部分都会加上引用或者在文章底部的参考文献中注明，如果不慎引用了你的文章但是却没有注明的请联系我;</li><li style="list-style: none"><input type="checkbox" checked> <strong>3.</strong>博客内文章欢迎转载，但转载前请联系我，保留出处和作者，不做商业使用，谢谢~~~ </li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我，一个正在进击的技术控，相信越努力，越自由。&lt;br&gt;&lt;br&gt;非常高兴能和大家在这里相遇。这是我的个人博客，搭建的初衷是广交朋友，广学知识。&lt;br&gt;&lt;br&gt;那么你肯定觉得我是一个技术大牛（哈哈），其实我只是一个技术控，对那些有趣的技术非常好奇罢了，&lt;br&gt;离真正的大神还差一
      
    
    </summary>
    
      <category term="about" scheme="http://licheetools.github.io/categories/about/"/>
    
    
      <category term="关于博主" scheme="http://licheetools.github.io/tags/%E5%85%B3%E4%BA%8E%E5%8D%9A%E4%B8%BB/"/>
    
  </entry>
  
  <entry>
    <title>你有什么话，想对我说嘛？</title>
    <link href="http://licheetools.github.io/2017/03/03/%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E8%AF%9D%EF%BC%8C%E6%83%B3%E5%AF%B9%E6%88%91%E8%AF%B4%E5%98%9B%EF%BC%9F/"/>
    <id>http://licheetools.github.io/2017/03/03/你有什么话，想对我说嘛？/</id>
    <published>2017-03-03T01:29:53.000Z</published>
    <updated>2019-04-13T08:25:39.838Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="liuyan" scheme="http://licheetools.github.io/categories/liuyan/"/>
    
    
      <category term="留言板" scheme="http://licheetools.github.io/tags/%E7%95%99%E8%A8%80%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>爬虫实战系列：（二）猫途鹰(tripadvisor)旅游景点信息爬取</title>
    <link href="http://licheetools.github.io/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%BA%8C%EF%BC%89%E7%8C%AB%E9%80%94%E9%B9%B0(tripadvisor)%E6%97%85%E6%B8%B8%E6%99%AF%E7%82%B9%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/"/>
    <id>http://licheetools.github.io/2017/03/02/爬虫实战系列：（二）猫途鹰(tripadvisor)旅游景点信息爬取/</id>
    <published>2017-03-02T11:09:47.000Z</published>
    <updated>2019-04-13T08:16:34.714Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>在上一篇中，我们说到某个内容从属于多个分类(即它有多个标签)，应该如何把它所属的全部标签都爬取下来呢？这一期博主就将教你如何实现这一功能。我们以<a href="https://www.tripadvisor.cn/Attractions-g60763-Activities-New_York_City_New_York.html" target="_blank" rel="noopener">猫途鹰</a>这个网站为例，向大家演示一下。</p><h2 id="爬取内容"><a href="#爬取内容" class="headerlink" title="爬取内容"></a>爬取内容</h2><p>如下图所示，我们需要爬取该图中所示景点的信息，具体包括：标题，封面图片，分类等信息。</p><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><h3 id="get-方法的使用"><a href="#get-方法的使用" class="headerlink" title="get()方法的使用"></a>get()方法的使用</h3><p>我们在上一篇中，获取标题，地址，单标签的文本信息采用了get_text()方法，但是如果要获取图片呢？我们是不能和之前一样，要采用一种新的方法：get(‘attr’)。这么说你可能有些困惑，举个简单的例子，看下面的代码:<br><code>&lt;a href=http://licheetools.top&gt; share my life with you &lt;/a&gt;</code><br>如果你只想获取网站信息，只需要.get(‘href’)即可。获取图片只需要.get(‘src’)因为图片的格式一般是这样的：<code>&lt;img src=&quot;http://licheetools.top/index.html/first.jpg&quot; alt=&quot;第一张图片&quot;&gt;</code></p><h3 id="stripped-strings的用法"><a href="#stripped-strings的用法" class="headerlink" title="stripped_strings的用法"></a>stripped_strings的用法</h3><p>在这里你可以认为是高级的get_text(),它这个可以同时取出多个文本，待会就采用这个来爬取多个标签。</p><h3 id="字符串的格式化"><a href="#字符串的格式化" class="headerlink" title="字符串的格式化"></a>字符串的格式化</h3><p>字符串的格式化通常采用{}和:来代替传统的%方式，具体如下：<br><strong>1、使用位置参数</strong><br>从下面的例子可以看出位置参数不受顺序约束，且可以为{},只要format里有相对应的参数值即可,参数索引从0开，传入位置参数列表可用*列表；<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'my name is &#123;&#125; ,age &#123;&#125;'</span>.format(<span class="string">'joe'</span>,<span class="number">18</span>)</span><br><span class="line">print(a)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">18</span></span><br><span class="line"></span><br><span class="line">b=<span class="string">'my name is &#123;1&#125; ,age &#123;0&#125;'</span>.format(<span class="number">10</span>,<span class="string">'joe'</span>)</span><br><span class="line">print(b)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">10</span></span><br><span class="line"></span><br><span class="line">c=<span class="string">'my name is &#123;1&#125; ,age &#123;0&#125; &#123;1&#125;'</span>.format(<span class="number">10</span>,<span class="string">'joe'</span>)</span><br><span class="line">print(c)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">10</span> joe</span><br><span class="line"></span><br><span class="line">data=[<span class="string">'joe'</span>,<span class="number">18</span>]</span><br><span class="line">d=<span class="string">'my name is &#123;&#125; ,age &#123;&#125;'</span>.format(*data)</span><br><span class="line">print(d)</span><br><span class="line">my name <span class="keyword">is</span> joe ,age <span class="number">18</span></span><br></pre></td></tr></table></figure></p><p><strong>2、使用关键字参数</strong><br>采用字典当关键字参数传入值，不过关键字参数值要对得上，可以在字典前加**<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">e=<span class="string">'my name is &#123;name&#125;,age is &#123;age&#125;'</span>.format(name=<span class="string">'joe'</span>,age=<span class="number">19</span>)</span><br><span class="line">print(e)</span><br><span class="line">my name <span class="keyword">is</span> joe,age <span class="keyword">is</span> <span class="number">19</span></span><br><span class="line"></span><br><span class="line">data=&#123;<span class="string">'name'</span>:<span class="string">'joe'</span>,<span class="string">'age'</span>:<span class="number">19</span>&#125;</span><br><span class="line">f=<span class="string">'my name is &#123;name&#125;,age is &#123;age&#125;'</span>.format(**data)</span><br><span class="line">print(f)</span><br><span class="line">my name <span class="keyword">is</span> joe,age <span class="keyword">is</span> <span class="number">19</span></span><br></pre></td></tr></table></figure></p><p>其他参数我在这里就不介绍了，你可以看这篇文章<a href="http://www.cnblogs.com/benric/p/4965224.html" target="_blank" rel="noopener">python之字符串格式化(formate)</a></p><h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/04/15 20:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: test_05.py</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">'https://www.tripadvisor.cn/Attractions-g60763-Activities-New_York_City_New_York.html'</span></span><br><span class="line">urls=[<span class="string">'https://www.tripadvisor.cn/Attractions-g60763-Activities-oa&#123;&#125;-New_York_City_New_York.html#FILTERED_LIST'</span>.format(str(i)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">1140</span>,<span class="number">30</span>)]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_attraction</span><span class="params">(url,data=None)</span>:</span></span><br><span class="line">    web_data = requests.get(url)</span><br><span class="line">    time.sleep(<span class="number">4</span>)</span><br><span class="line">    soup = BeautifulSoup(web_data.text, <span class="string">'lxml'</span>)</span><br><span class="line">    titles = soup.select(<span class="string">'div.listing_title &gt; a[target="_blank"]'</span>)</span><br><span class="line">    images = soup.select(<span class="string">'img[width="180"]'</span>)</span><br><span class="line">    cates = soup.select(<span class="string">'div.tag_line &gt; div'</span>)</span><br><span class="line">    <span class="keyword">for</span> title,image,cate <span class="keyword">in</span> zip(titles,images,cates):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'title'</span>:title.get_text(),</span><br><span class="line">            <span class="string">'image'</span>:image.get(<span class="string">'src'</span>),</span><br><span class="line">            <span class="string">'cate'</span>:list(cate.stripped_strings),</span><br><span class="line">        &#125;</span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line">get_attraction(url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> single_url <span class="keyword">in</span> urls:</span><br><span class="line">    get_attraction(single_url)</span><br><span class="line"></span><br><span class="line">print(urls)</span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>由于抓取的内容太多，这里只呈现部分信息。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'曼哈顿天际线'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'大都会艺术博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'艺术博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'中央公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'公园'</span>, <span class="string">','</span>, <span class="string">'景观步行区'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'9/11纪念馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'古迹'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'峭石之巅观景台'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'观景台'</span>, <span class="string">','</span>, <span class="string">'瞭望台'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'布鲁克林大桥'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'桥梁'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣帕提克大教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'教堂'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'百老汇'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'大中央车站'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'建筑'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'布莱恩公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'纽约公共图书馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'世贸一号观景台'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'观景台'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'史泰登岛渡轮'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'轮渡'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'高线公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景观步行区'</span>, <span class="string">','</span>, <span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'帝国大厦'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'建筑'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'观景台'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'自由女神像'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'洛克菲勒中心'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'现代艺术博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'艺术博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'The Oculus'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'景点与地标'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'无畏海空宇宙博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'阿波罗剧院'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'纪念碑与雕像'</span>, <span class="string">','</span>, <span class="string">'建筑'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'华盛顿广场公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'特色博物馆'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣保罗教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'圣约翰教堂'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'周边'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'河滨公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'Studio 54'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'教堂'</span>, <span class="string">','</span>, <span class="string">'圣地与宗教景点'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'埃利斯岛'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'圣地与宗教景点'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'切尔西市场'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'商人之家博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'公园'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'哈德逊河公园'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: []&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'艾利斯岛移民博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'剧院'</span>]&#125;</span><br><span class="line">&#123;<span class="string">'title'</span>: <span class="string">'犹太遗产博物馆'</span>, <span class="string">'image'</span>: <span class="string">'https://cc.ddcdn.com/img2/x.gif'</span>, <span class="string">'cate'</span>: [<span class="string">'历史博物馆'</span>, <span class="string">','</span>, <span class="string">'景点与地标'</span>, <span class="string">','</span>, <span class="string">'古迹'</span>]&#125;</span><br><span class="line"></span><br><span class="line">。。。。。。</span><br></pre></td></tr></table></figure></p><h2 id="下期说明"><a href="#下期说明" class="headerlink" title="下期说明"></a>下期说明</h2><p>哈哈，今天总的来说还是比较简单的，容易操作，下期我们准备爬点不一样的东西。。。</p><p>今天的分享就到这里了，如果你有任何不懂的问题，可以发信息或者留言喽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h2&gt;&lt;p&gt;在上一篇中，我们说到某个内容从属于多个分类(即它有多个标签)，应该如何把它所属的全部标签都爬取下来呢？这一期博主就将教你如何
      
    
    </summary>
    
      <category term="spider" scheme="http://licheetools.github.io/categories/spider/"/>
    
    
      <category term="爬虫实战" scheme="http://licheetools.github.io/tags/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>爬虫实战系列：（一）58同城-转转商品信息爬取</title>
    <link href="http://licheetools.github.io/2017/03/02/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%8958%E5%90%8C%E5%9F%8E-%E8%BD%AC%E8%BD%AC%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%E7%88%AC%E5%8F%96/"/>
    <id>http://licheetools.github.io/2017/03/02/爬虫实战系列：（一）58同城-转转商品信息爬取/</id>
    <published>2017-03-02T02:02:41.000Z</published>
    <updated>2019-04-13T07:17:03.001Z</updated>
    
    <content type="html"><![CDATA[<h2 id="说在前面"><a href="#说在前面" class="headerlink" title="说在前面"></a>说在前面</h2><p>本系列教程记录了博主的爬虫之路，可谓是有苦又累，有甜有笑，如果你在看过本系列教程之后，对爬虫<br>有独到的见解或者浓厚的兴趣，不妨留言和博主进行交流学习呢，我在这里等你来玩~~~</p><h2 id="爬取内容"><a href="#爬取内容" class="headerlink" title="爬取内容"></a>爬取内容</h2><p>如下图所示，我们需要爬取该图中所示商品的信息，具体包括：类目，标题，价格，浏览量，所在区域<br>等信息。<br><img src="https://storage6.cuntuku.com/2018/03/31/DBHP3.png" alt="DBHP3.png"></p><h2 id="代码内容"><a href="#代码内容" class="headerlink" title="代码内容"></a>代码内容</h2><h3 id="字典属性法"><a href="#字典属性法" class="headerlink" title="字典属性法"></a>字典属性法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/4/10 15:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: zhuanzhuan.py</span></span><br><span class="line"><span class="comment"># @Website：http：//licheetools.top</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup  <span class="comment">#导入需要的包和模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time   <span class="comment">#用于控制每次爬取的时间间隔</span></span><br><span class="line"></span><br><span class="line">user_agent=<span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) </span></span><br><span class="line"><span class="string">AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User_Agent'</span>:<span class="string">'user_agent'</span></span><br><span class="line">&#125;</span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_attrition</span><span class="params">(url)</span>:</span>   <span class="comment">#定义函数，便于调用</span></span><br><span class="line">    <span class="comment">#url = 'http://zhuanzhuan.58.com/detail/967678151307198471z.shtml</span></span><br><span class="line">    ?fullCate=5%2C38484%2C23094&amp;fullLocal=1&amp;from=pc&amp;metric=null&amp;</span><br><span class="line">    PGTID=<span class="number">0</span>d305a36<span class="number">-0000</span><span class="number">-1792</span>-ee6b<span class="number">-8</span>d43de6b3765&amp;ClickID=<span class="number">7</span><span class="string">'    </span></span><br><span class="line"><span class="string">#此处URL前面的(#)不可删除，否则就出现函数调用错误，因为后面调用的link已经替换此处的url</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)  </span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    casses=soup.select('</span><span class="comment">#nav &gt; div &gt; span &gt; a')</span></span><br><span class="line">    titles=soup.select(<span class="string">'div.box_left_top &gt; h1'</span>)</span><br><span class="line">    moneys=soup.select(<span class="string">'div.price_li &gt; span[class="price_now"] &gt; i'</span>)</span><br><span class="line">    addresses=soup.select(<span class="string">'div.palce_li &gt; span &gt; i'</span>)</span><br><span class="line">    <span class="keyword">for</span> cass,title,money,address <span class="keyword">in</span> zip(casses,titles,moneys,addresses):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'cass'</span>:cass.get_text(),   <span class="comment">#文字调用get_text()方法</span></span><br><span class="line">            <span class="string">'title'</span>:title.get_text(),</span><br><span class="line">            <span class="string">'money'</span>:money.get_text(),</span><br><span class="line">            <span class="string">'address'</span>:address.get_text(),</span><br><span class="line">        &#125;</span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_item_info</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'http://bj.58.com/pbdn/'</span></span><br><span class="line">    web_data=requests.get(url)</span><br><span class="line">    soup=BeautifulSoup(web_data.text,<span class="string">'lxml'</span>)</span><br><span class="line">    href_list=soup.select(<span class="string">'a.t'</span>)</span><br><span class="line">    <span class="keyword">for</span> href <span class="keyword">in</span> href_list:</span><br><span class="line">        link=href.get(<span class="string">'href'</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'zhuanzhuan'</span> <span class="keyword">in</span> link:   <span class="comment">#除去网页中不需要的精准推广部分</span></span><br><span class="line">            get_attrition(link)</span><br><span class="line"></span><br><span class="line">get_all_item_info()</span><br></pre></td></tr></table></figure><h3 id="列表索引法"><a href="#列表索引法" class="headerlink" title="列表索引法"></a>列表索引法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#！/user/bin/pytthon</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time: 2017/4/10 15:15</span></span><br><span class="line"><span class="comment"># @Author: lichexo</span></span><br><span class="line"><span class="comment"># @File: zhuanzhuan.py</span></span><br><span class="line"><span class="comment"># @Website：http：//licheetools.top</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">user_agent=<span class="string">'Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X)</span></span><br><span class="line"><span class="string">AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1'</span></span><br><span class="line">headers=&#123;</span><br><span class="line">    <span class="string">'User_Agent'</span>:<span class="string">'user_agent'</span></span><br><span class="line">&#125;</span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_item_info</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="comment">#url='http://zhuanzhuan.58.com/detail/835458751461588996z.shtml</span></span><br><span class="line">    ?fullCate=5%2C38484%2C23094&amp;fullLocal=1&amp;from=pc&amp;</span><br><span class="line">    metric=null&amp;PGTID=<span class="number">0</span>d305a36<span class="number">-0000</span><span class="number">-123</span>c<span class="number">-630</span>d-da6c51789948&amp;ClickID=<span class="number">1</span><span class="string">'</span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)</span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    title_list=soup.select('</span>h1.info_titile<span class="string">')</span></span><br><span class="line"><span class="string">    title=title_list[0].text   #该列表有且仅有唯一一个元素，采用get_text()将其取出</span></span><br><span class="line"><span class="string">    price_list=soup.select('</span>span.price_now &gt; i<span class="string">')</span></span><br><span class="line"><span class="string">    price=price_list[0].text</span></span><br><span class="line"><span class="string">    views_list=soup.select('</span>span.look_time<span class="string">')</span></span><br><span class="line"><span class="string">    view=views_list[0].text</span></span><br><span class="line"><span class="string">    area_list=soup.select('</span>div.palce_li &gt; span &gt; i<span class="string">')</span></span><br><span class="line"><span class="string">    area=area_list[0].text</span></span><br><span class="line"><span class="string">    cate_list=soup.select('</span>span.crb_i &gt; a<span class="string">')</span></span><br><span class="line"><span class="string">    cate=cate_list[-1].text.strip()  #使用strip()函数来消除换行和空格的影响</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    data=&#123;</span></span><br><span class="line"><span class="string">        '</span>title<span class="string">':title,</span></span><br><span class="line"><span class="string">        '</span>price<span class="string">':price,</span></span><br><span class="line"><span class="string">        '</span>view<span class="string">':view,</span></span><br><span class="line"><span class="string">        '</span>area<span class="string">':area,</span></span><br><span class="line"><span class="string">        '</span>cate<span class="string">':cate,</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    print(data)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">def get_all_item_info():</span></span><br><span class="line"><span class="string">    url='</span>http://bj<span class="number">.58</span>.com/pbdn/<span class="string">'</span></span><br><span class="line"><span class="string">    web_data=requests.get(url,headers=headers)</span></span><br><span class="line"><span class="string">    soup=BeautifulSoup(web_data.text,'</span>lxml<span class="string">')</span></span><br><span class="line"><span class="string">    href_list=soup.select('</span>a.t<span class="string">')</span></span><br><span class="line"><span class="string">    for href in href_list:</span></span><br><span class="line"><span class="string">        link=href.get('</span>hre<span class="string">f')   #获取元素的某个属性采用get()方法来实现</span></span><br><span class="line"><span class="string">        if '</span>zhuanzhuan<span class="string">' in link:</span></span><br><span class="line"><span class="string">            get_item_info(link)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">get_all_item_info()</span></span><br></pre></td></tr></table></figure><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="https://storage7.cuntuku.com/2018/03/31/DBe6D.png" alt="DBe6D.png"></p><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><h3 id="soup-select-选择标签问题"><a href="#soup-select-选择标签问题" class="headerlink" title="soup.select ( )选择标签问题"></a>soup.select ( )选择标签问题</h3><p>你只需要在浏览器中鼠标右键点击审查(<code>Ctrl+Shift+I</code>) –&gt; 找到字段的具体代码 –&gt; 右键选择Copy –&gt; Copy selector即可得到你想要的代码字段。为保证你是否正确捕抓到相关信息，你可以鼠标右键点击查看网页源代码(<code>Ctrl+U</code>) –&gt;然后再按<code>Ctrl+F</code>调出搜索框 –&gt; 将你刚才捕抓到的信息进行复制黏贴并回车 –&gt; 看右侧的黄色代码区是否是包括你所需信息的最小高亮区，不是则往上一级父级标签查询。</p><h3 id="get-text-和-get-的使用问题"><a href="#get-text-和-get-的使用问题" class="headerlink" title="get_text 和 get()的使用问题"></a>get_text 和 get()的使用问题</h3><p>get_text()，是返回选择的标签文本，具体可以查看<a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/#get-text" target="_blank" rel="noopener">参考文档</a>;而get(‘’)，这是选择标签中的属性(也就是里面有=符号的左边)，<br>比如在<code>&lt;li&gt;&lt;a class=&quot;rrence intnal&quot; href=&quot;#next-siblings-previous-siblings&quot;&gt;&lt;/li&gt;</code>之中，选择li &gt; a这个标签之后，则可以用get(‘href’)获取其中的链接。</p><h2 id="下期说明"><a href="#下期说明" class="headerlink" title="下期说明"></a>下期说明</h2><p>哈哈，今天的内容是不是很简单，不过你是不是有一个疑问，就是如果某个内容从属于多个分类(即它有多个标签)我们应该如何把它所属的全部标签都爬取下来呢？那么下期博主将教你如何实现这一功能。</p><p><strong>本教程适合有一部分Python基础的同学，小白童鞋很抱歉。。。</strong></p><p>今天的分享就到这里了，如果你有任何不懂的问题，可以发信息或者留言喽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;说在前面&quot;&gt;&lt;a href=&quot;#说在前面&quot; class=&quot;headerlink&quot; title=&quot;说在前面&quot;&gt;&lt;/a&gt;说在前面&lt;/h2&gt;&lt;p&gt;本系列教程记录了博主的爬虫之路，可谓是有苦又累，有甜有笑，如果你在看过本系列教程之后，对爬虫&lt;br&gt;有独到的见解或者浓厚的兴
      
    
    </summary>
    
      <category term="spider" scheme="http://licheetools.github.io/categories/spider/"/>
    
    
      <category term="爬虫实战" scheme="http://licheetools.github.io/tags/%E7%88%AC%E8%99%AB%E5%AE%9E%E6%88%98/"/>
    
  </entry>
  
  <entry>
    <title>行者有梦，千里亦趋</title>
    <link href="http://licheetools.github.io/2017/03/01/%E8%A1%8C%E8%80%85%E6%9C%89%E6%A2%A6%EF%BC%8C%E5%8D%83%E9%87%8C%E4%BA%A6%E8%B6%8B/"/>
    <id>http://licheetools.github.io/2017/03/01/行者有梦，千里亦趋/</id>
    <published>2017-03-01T02:14:19.000Z</published>
    <updated>2019-04-13T07:09:58.592Z</updated>
    
    <content type="html"><![CDATA[<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="对不起，此文章为加密内容，只有管理员才能查看." />    <label for="pass">对不起，此文章为加密内容，只有管理员才能查看.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      行者有梦，千里亦趋，人生几何。
    
    </summary>
    
      <category term="life" scheme="http://licheetools.github.io/categories/life/"/>
    
    
      <category term="life" scheme="http://licheetools.github.io/tags/life/"/>
    
  </entry>
  
</feed>
